blueprint:
  name: State 1 temperature ramp control-2024-06-08
  author: SirGoodenough
  description: "This ramps up the thermostat just enough at a time to keep your stage
    2  (or emergency) heat from activating. This is meant to be run for instance in
    \ the morning when the system is recovering from overnight thermostat set-back,
    and you don't want it to kick in the stage 2 expensive heat source.\nThere is
    an optional facility to disable this based on zone occupancy. Also there is a
    roll-your-own condition statement for things I haven't thought of.\n\n[Community
    link for this blueprint](https://community.home-assistant.io/t/stage-1-temperature-control-for-climate-entity/649401)\n\n##
    \U0001F5FFNotice\U0001F46E\U0001F3FF‍♂️:\n* Copies of the original Blueprint that
    were converted via the 'Take Control' feature or other means are officially not
    supported by me.\n\n* I may or may not be able to support you when you have a
    problem after you make changes to my code, as some of the code is no longer mine.\n\n*
    I & my license also require attribution as a link back to the original should
    you use this code in your own creation.\n\n* [Here is a link to my license & the
    original github post](https://github.com/SirGoodenough/HA_Blueprints?tab=License-1-ov-file)
    expected to be followed & referenced as attribution should you use this code elsewhere.\n"
  source_url: https://github.com/SirGoodenough/HA_Blueprints/blob/Update-for-legacy-changes/Automations/Stage_1_Temperature_Control.yaml
  domain: automation
  homeassistant:
    min_version: 2024.6.0
  input:
    required_inputs:
      name: "Required input \U0001F440"
      icon: mdi:alert-box
      collapsed: false
      description: 'This input is required for the blueprint to function and must
        be filled in.

        '
      input:
        climate_e:
          name: Room Thermostat Climate Entity
          description: 'The Climate device, thermostat, that you are ramping.

            '
          selector:
            entity:
              filter:
              - domain:
                - climate
              multiple: false
              reorder: false
        ramp_start_time:
          name: Time of day ramp should start
          description: 'Set this for the time of day you want the ramp function to
            be enabled.

            '
          selector:
            time: {}
        ramp_end_time:
          name: Time of day ramp should stop
          description: 'Set this for the time of day you want the ramp function to
            end.

            Note: If it reaches maxTemp sooner, it will stop there.

            '
          selector:
            time: {}
        maxTemp:
          name: Goal Temperature
          description: 'If it is at least this, go no warmer.

            '
          selector:
            number:
              min: 30.0
              max: 90.0
              unit_of_measurement: Degrees
              mode: slider
              step: 0.5
    required_inputs_with_defaults:
      name: Defaulted Inputs
      icon: mdi:alert-decagram
      collapsed: true
      description: "These inputs are required, but have values that are defaulted
        to values that work for me.\n  It is possible you will need to change them.\n
        \ My suggestion is to not change them until you detect an issue that you think
        can be\n  fixed by changing these.\n\n  In the end, these must have a value.\n
        \ This blueprint will work if no changes are made to this section.\n"
      input:
        rampRate:
          name: Degrees above actual
          description: 'Keep set point this above actual

            '
          default: 1.5
          selector:
            number:
              min: 0.0
              max: 5.0
              unit_of_measurement: Degrees
              mode: slider
              step: 0.5
    optional_parameters:
      name: "Optional parameters\U0001F913"
      icon: mdi:alert-octagon-outline
      collapsed: true
      description: "These inputs set optional parameters that allow you to customize
        the intended actions.\n  Read the individual descriptions for more details.\n\n
        \ The Blueprint will work if no changes are made to this section.\n"
      input:
        interval:
          name: Hold Period
          description: 'Set this delay between thermostat temp setting events. If
            it changes the goal set temp, it waits this long before it rechecks. Basically
            this rate limits stuff.

            '
          default:
            hours: 0
            minutes: 3
            seconds: 0
          selector:
            duration: {}
        weekday:
          name: Day of the week to use the Automation
          description: Control temp on these days with this automation.
          default:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
          selector:
            select:
              options:
              - label: Monday
                value: mon
              - label: Tuesday
                value: tue
              - label: Wednesday
                value: wed
              - label: Thursday
                value: thu
              - label: Friday
                value: fri
              - label: Saturday
                value: sat
              - label: Sunday
                value: sun
              custom_value: false
              multiple: true
              sort: false
        occ_test:
          name: Enable the Occupancy test?
          description: 'This BluePrint can take into consideration if a zone is occupied.

            To enable this feature, select yes.

            To ignore this feature select no.

            '
          default: false
          selector:
            boolean: {}
        t_zone:
          name: Zone to monitor for occupancy
          description: 'If you said yes above, then you enter the zome to monitor
            here.

            Default zone is home. Change to another zone if you want to.

            If you said no above, this section has no effect on your BluePrint.

            '
          default: zone.home
          selector:
            entity:
              filter:
              - domain:
                - zone
              multiple: false
              reorder: false
        additional_conditions:
          name: Additional conditions
          description: "Extra conditions you may want to add to this automation \n(Example:
            Is it heating season, is my primary heat source ready, etc.)\n"
          default: []
          selector:
            condition: {}
triggers:
- trigger: time
  at: !input ramp_start_time
  id: time_start
- trigger: state
  entity_id: !input climate_e
  attribute: current_temperature
  id: room_temp_changed
- trigger: homeassistant
  event: start
  id: ha_restart
variables:
  _climate_e: !input climate_e
  _maxTemp: !input maxTemp
  _interval: !input interval
  _ramp_end_time: !input ramp_end_time
  _rampRate: !input rampRate
  _occ_test: !input occ_test
  _t_zone: !input t_zone
  _current_temp: '{{ state_attr(_climate_e, "current_temperature") | float(0) }}'
  _thermostat_set_temp: '{{ state_attr(_climate_e, "temperature") | float(0) }}'
  _bump_target: '{{ [_current_temp + _rampRate, _maxTemp] | min }}'
condition:
- alias: Only allow execution on selected Weekdays and (for HA restart) time period
  condition: time
  after: !input ramp_start_time
  before: !input ramp_end_time
  weekday: !input weekday
- alias: Bail if over maxTemp
  condition: template
  value_template: '{{ _current_temp < _maxTemp }}'
- alias: Pass if occ is false or occ is true & zone > 0 (someones there).
  condition: template
  value_template: "{% if _occ_test %}\n  {% if _t_zone > 0 %}\n    true\n  {% else
    %}\n    false\n  {% endif %}\n{% else %}\n  true\n{% endif %}"
- alias: User pick
  condition: !input additional_conditions
actions:
- alias: Repeat bumping temp until you hit the top or the time is up
  repeat:
    while:
    - alias: Stop when at maxTemp
      condition: template
      value_template: '{{ _current_temp <= _maxTemp }}'
    - alias: Don't try after endTime.
      condition: time
      before: !input ramp_end_time
    sequence:
    - alias: Check if current is above maxTemp & if setpoint bump is needed
      if: '{{ _current_temp <= _maxTemp and _thermostat_set_temp != _bump_target }}'
      then:
      - alias: Bump the temp up at rampRate until it gets to max
        action: climate.set_temperature
        target:
          entity_id: !input climate_e
        data:
          temperature: '{{ _bump_target }}'
      - delay: '{{ _interval }}'
      else:
      - alias: One minute delay before recycle
        delay: 60
mode: single
max_exceeded: silent
