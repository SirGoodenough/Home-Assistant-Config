#####################################################
#                                                   #
# System                                            #
#                                                   #
#####################################################

####################################################
# Sonoff Bridge Demultiplexer                      #
####################################################

- id: cef2adcb-a4fc-4205-8c13-e3416847bf7b
  initial_state: on
  alias: rfbridge_RfReceived_demultiplexer
  mode: queued
  # Gets info from RF-Bridges and sends them to the python script to generate
  #   individual MQTT topics for them.
  #  Codes recieved from room devices.
  trigger:
    - platform: mqtt
      topic: RFBridge/tele/RESULT
    - platform: mqtt
      topic: RFBridge2/tele/RESULT
  condition:
    - condition: template
      value_template: >
        {{ trigger.payload_json is defined and
          trigger.payload_json.RfReceived is defined and 
          trigger.payload_json.RfReceived.Data is defined }}
  action:
    service: python_script.rfbridge2_demux
    data:
      payload: "{{trigger.payload_json.RfReceived.Data}}"

- id: d6ad7aff-f806-4c75-ab1e-886cba8ef2f9
  initial_state: on
  alias: rfbridge_RfCode_demultiplexer
  mode: queued
  # Gets info from RF-Bridges and sends them to the python script to generate
  #   individual MQTT topics for them.
  #  Codes generated from RF-Bridges.
  trigger:
    - platform: mqtt
      topic: RFBridge/tele/RESULT
    - platform: mqtt
      topic: RFBridge2/tele/RESULT
  condition:
    - condition: template
      value_template: >
        {{ trigger.payload_json is defined and
          trigger.payload_json.RfCode is defined }}
  action:
    service: python_script.rfbridge2_demux
    data:
      payload: "{{trigger.payload_json.RfCode}}"

####################################################
# Dark out?                                        #
####################################################
- id: c4d89216-e97a-470b-82e9-cb9e4e66e601
  initial_state: on
  alias: MQTT Dark Switch
  mode: queued
  trigger:
    - platform: state
      entity_id: binary_sensor.dark_outside
  action:
    - service: mqtt.publish
      data:
        retain: true
        topic: "Outside/cmnd/EVENT"
        payload: >-
          {% if trigger.to_state.state == 'on' %}
            DARK
          {% else %}
            DAY
          {% endif %}

####################################################
# Daily Back-up                                    #
####################################################
- id: ea70e8a8-45bf-4adb-b1cf-85b12dd5129e
  alias: Daily Backup
  initial_state: on
  trigger:
    - platform: time
      at: 06:18:14
  action:
    - service: hassio.addon_start
      data:
        addon: 3490a758_remote_backup

####################################################
# MQTT Restart Tasmota                             #
####################################################
####    Use this automation to get all your devices in sync, including
####     power state, immediately after Home Assistant is (re)started.
####    Also taking this opportunity to start other things up for a clean
####     restart.
- id: c9484bd1-6c87-4cfc-a018-1572be06d402
  alias: Power state on HA start-up
  initial_state: on
  trigger:
    - platform: homeassistant
      event: start
  action:
    - delay: 00:00:22
    - alias: get bluetooth going
      service: remote_command_line.bt_restart
    - alias: Make sure EZ Buttons are active
      service: script.tasmota_ez_button_for_update_and_restart_all_2022_01_07a
    - delay: 00:00:22
    - alias: Push the Tasmota Restart Button
      service: button.press
      target:
        entity_id: button.ez_restart_button_tasmota
    - delay: 00:00:22
    - alias: "Assume its dark- Prevents IDK state and lights not working"
      service: mqtt.publish
      data:
        topic: Outside/cmnd/EVENT
        payload: "DARK"
        retain: true
    - alias: Make sure Dust Collector is off
      service: switch.turn_off
      entity_id: switch.dust_collector

####################################################
# Restart Downstairs Broadlink if its Dead         #
####################################################
- id: 970763ea-a7ba-40e6-9d46-79b21e63996b
  alias: restart Broadlink
  description: Watch Broadlink and restart it if it's dead.
  trigger:
  - platform: state
    entity_id: input_button.broadlink_rm3_reset
  - platform: state
    entity_id:
      - device_tracker.rassilon_mountcadon_duckdns_org_c8_f7_42_21_a6_a8_2
    to: not_home
    for:
      minutes: 10
  - platform: state
    entity_id:
      - device_tracker.rassilon_mountcadon_duckdns_org_c8_f7_42_21_a6_a8_2
    to: not_home
    for:
      minutes: 35
  - platform: state
    entity_id:
      - device_tracker.rassilon_mountcadon_duckdns_org_c8_f7_42_21_a6_a8_2
    to: not_home
    for:
      minutes: 60
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.sonoff_1000dbf4a6_1
  - service: script.media_player_boink
  - delay:
      hours: 0
      minutes: 0
      seconds: 4
      milliseconds: 0
  - service: switch.turn_on
    target:
      entity_id: switch.sonoff_1000dbf4a6_1
  - service: script.tts_say_broadlink_reset
  mode: single

- id: '0bca4786-e971-442f-bf14-6ef122038dfa'
  alias: Drall is Down
  description: Drall Alert
  use_blueprint:
    path: SirGoodenough/Device_tracker_Monitor_and_Notifier.yaml
    input:
      trackees:
      - device_tracker.rassilon_mountcadon_duckdns_org_dc_a6_32_a0_43_e7_2
      - device_tracker.rassilon_mountcadon_duckdns_org_dc_a6_32_a0_43_e6_2
      alt_notify:
      - service: script.say_a_thing
        data:
          message: Drall is DOWN. Ping the big boned guy.
          entities: media_player.kitchen_speaker

####################################################
# check for blueprint updates                      #
####################################################
- id: 28062904-bd08-44fc-9021-13d8ad4aa054
  alias: _Blueprints Update
  description: ""
  trigger:
    - platform: time_pattern
      hours: "12"
  condition: []
  action:
    - service: shell_command.blueprints_update
      data: {}
  mode: single

####################################################
# Page DrZzs                                       #
####################################################
- id: a67f47dc-209c-4198-b885-c81179bf0dc1
  alias: webhook_to_tts
  description: Push a message to a speaker as sent from a webhook.
  trigger:
  - platform: webhook
    webhook_id: -xsuvHvmEc19Cfnnvpt_sHvbV
  condition: []
  action:
    - service: tts.cloud_say
      data:
        entity_id: media_player.kitchen_speaker
        message: '{{ trigger.json.message }}'
        options:
          gender: male
        language: en-CA
  mode: queued
      # Sending the webhook via shell_command integration: curl -X POST -H 'Content-type:application/json' --data '{"message":"{{message}}"}' https://hooks.nabu.casa/gAAA_and_the_rest_of_the_URL_here

- id: 626ef3ae-aa7c-4c57-bfc8-ec3c834cd5e6
  alias: Doc Message List
  mode: single
  max_exceeded: silent
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_select.doc_messages
  condition:
    or:
    - "{{ trigger.to_state.state != '' }}"
    - "{{ trigger.to_state.state != 'off' }}"
  action:
    - alias: So I hear it
      service: shell_command.test_message
      data: {"message":"{{ trigger.to_state.state }}"}
    - alias: So Doc Hears it
      service: shell_command.drzzs_page
      data: {"message":"{{ trigger.to_state.state }}"}
    - alias: Reset the list
      service: input_select.select_option
      data:
        option: "off"
      target:
        entity_id:
          - input_select.doc_messages

# - alias: say a thing
#   sequence:
#     service: script.say_a_thing
#     data:
#       message: message 1
#       entities: media_player.kitchen_speaker
