blueprint:
  name: Keypad 5 button cypher to turn on something - 2024-06-08
  author: SirGoodenough
  description: "This will accept any 5 button presses or ```Binary Sensor``` detections
    and use them to preform an action. RE open a lock, or whatever.\n\n[Community
    link for this blueprint](https://community.home-assistant.io/t/keypad-cipher-code-for-5-button-presses-before-you-turn-on-an-input-boolean/322385)\n\n##
    \U0001F5FFNotice\U0001F46E\U0001F3FF‍♂️:\n* Copies of the original Blueprint that
    were converted via the 'Take Control' feature or other means are officially not
    supported by me.\n\n* I may or may not be able to support you when you have a
    problem after you make changes to my code, as some of the code is no longer mine.\n\n*
    I & my license also require attribution as a link back to the original should
    you use this code in your own creation.\n\n* [Here is a link to my license & the
    original github post](https://github.com/SirGoodenough/HA_Blueprints?tab=License-1-ov-file)
    expected to be followed & referenced as attribution should you use this code elsewhere.\n"
  source_url: https://github.com/SirGoodenough/HA_Blueprints/blob/Update-for-legacy-changes/Automations/keypad_5_button_cipher_to_turn_on_something.yaml
  domain: automation
  homeassistant:
    min_version: 2024.6.0
  input:
    required_inputs:
      name: "Required input \U0001F440"
      icon: mdi:alert-box
      collapsed: false
      description: 'These inputs are required for the blueprint to function and must
        be filled in.

        '
      input:
        button_one:
          name: Button Press One
          description: '```Binary Sensor``` for First Button Pressed'
          selector:
            entity:
              filter:
              - domain:
                - binary_sensor
              multiple: false
              reorder: false
        button_two:
          name: Button Press Two
          description: '```Binary Sensor``` for Second Button Pressed'
          selector:
            entity:
              filter:
              - domain:
                - binary_sensor
              multiple: false
              reorder: false
        button_three:
          name: Button Press Three
          description: '```Binary Sensor``` for Third Button Pressed'
          selector:
            entity:
              filter:
              - domain:
                - binary_sensor
              multiple: false
              reorder: false
        button_four:
          name: Button Press Four
          description: '```Binary Sensor``` for Forth Button Pressed'
          selector:
            entity:
              filter:
              - domain:
                - binary_sensor
              multiple: false
              reorder: false
        button_five:
          name: Button Press Five
          description: '```Binary Sensor``` for Fifth Button Pressed'
          selector:
            entity:
              filter:
              - domain:
                - binary_sensor
              multiple: false
              reorder: false
        lock_control:
          name: Buffer for the Final Lock Enable
          description: '```input_boolean``` - Final Enable to trigger your lock or
            action'
          selector:
            entity:
              filter:
              - domain:
                - input_boolean
              multiple: false
              reorder: false
        seq_status:
          name: Control Sequence Status Placeholder
          description: '```input_number``` - The internal use lock sequence number
            (set range to 0 to 100) You will need one of these for every copy of this
            automation,  IE one for every lock code.

            '
          selector:
            entity:
              filter:
              - domain:
                - input_number
              multiple: false
              reorder: false
    required_inputs_with_defaults:
      name: Defaulted Input
      icon: mdi:alert-decagram
      collapsed: true
      description: "This input is required, but has a value that is defaulted to a
        value that worked for me.\n  It is possible you will need to change it.\n
        \ My suggestion is to not change it until you detect an issue that you think
        can be\n  fixed by changing this.\n\n  In the end, this must have a value.\n
        \ This blueprint will work if no changes are made to this section.\n"
      input:
        on_timer:
          name: Lock On Time in Seconds
          description: Time output signal is on in seconds. Generally 5 seconds is
            good here.
          default: 60
          selector:
            number:
              min: 5.0
              max: 360.0
              unit_of_measurement: seconds
              mode: slider
              step: 1.0
    optional_parameters:
      name: "Optional parameters\U0001F913"
      icon: mdi:alert-octagon-outline
      collapsed: true
      description: "These inputs set optional parameters that allow you to customize
        the intended actions.\n  Read the individual descriptions for more details.\n\n
        \ The Blueprint will work if no changes are made to this section.\n"
      input:
        additional_conditions:
          name: Additional conditions
          description: "Extra conditions you may want to add to this automation \n(Example:
            Home occupied, TV on, etc)\n"
          default: []
          selector:
            condition: {}
triggers:
- trigger: state
  entity_id: !input button_one
  id: pad1
  from: 'off'
  to: 'on'
- trigger: state
  entity_id: !input button_two
  id: pad2
  from: 'off'
  to: 'on'
- trigger: state
  entity_id: !input button_three
  id: pad3
  from: 'off'
  to: 'on'
- trigger: state
  entity_id: !input button_four
  id: pad4
  from: 'off'
  to: 'on'
- trigger: state
  entity_id: !input button_five
  id: pad5
  from: 'off'
  to: 'on'
variables:
  seq_status_ent: !input seq_status
  seq_status_last: '{{ expand(seq_status_ent)[0].last_changed | as_timestamp }}'
  seq_status_val: '{{ expand(seq_status_ent)[0].state }}'
  tnow: '{{ as_timestamp(now()) }}'
condition: !input additional_conditions
actions:
- alias: Reset seq number to 99 if timeout occurred
  action: input_number.set_value
  data:
    entity_id: !input seq_status
    value: "{% if seq_status_last < tnow - (5*60) %}\n  {# It's been too long so reset
      the sequence #}\n  99\n{% else %} \n  {# Timing is good, so accept the value
      set #}\n  {{ seq_status_val }}\n{% endif %}\n"
- choose:
  - alias: Somebody pushed the first button
    conditions:
    - condition: trigger
      id: pad1
    sequence:
    - alias: Set seq number to 1
      action: input_number.set_value
      data:
        entity_id: !input seq_status
        value: 1
  - alias: Button 2 pushed in correct sequence number order
    conditions:
    - and:
      - condition: trigger
        id: pad2
      - condition: template
        value_template: '{{ is_state( seq_status_ent, ''1.0'') }}'
    sequence:
    - alias: Set seq number to 3
      action: input_number.set_value
      data:
        value: 3
      target:
        entity_id: !input seq_status
  - alias: Button 3 pushed in correct sequence number order
    conditions:
    - and:
      - condition: trigger
        id: pad3
      - condition: template
        value_template: '{{ is_state( seq_status_ent, ''3.0'') }}'
    sequence:
    - alias: Set seq number to 7
      action: input_number.set_value
      data:
        value: 7
      target:
        entity_id: !input seq_status
  - alias: Button 4 pushed in correct sequence number order
    conditions:
    - and:
      - condition: trigger
        id: pad4
      - condition: template
        value_template: '{{ is_state( seq_status_ent, ''7.0'') }}'
    sequence:
    - alias: Set seq number to 15
      action: input_number.set_value
      data:
        value: 15
      target:
        entity_id: !input seq_status
  - alias: Button 5 pushed in correct sequence number order
    conditions:
    - and:
      - condition: trigger
        id: pad5
      - condition: template
        value_template: '{{ is_state( seq_status_ent, ''15.0'') }}'
    sequence:
    - alias: Set seq number to 31
      action: input_number.set_value
      data:
        value: 31
      target:
        entity_id: !input seq_status
    - alias: Enable the Lock
      action: input_boolean.turn_on
      entity_id: !input lock_control
    - alias: Leave the lock enabled for a time limit
      delay: !input on_timer
    - alias: Disable the Lock normal
      action: input_boolean.turn_off
      entity_id: !input lock_control
    - alias: Reset status number normal
      action: input_number.set_value
      data:
        value: 0
      target:
        entity_id: !input seq_status
  default:
  - alias: Reset status number on fail code
    action: input_number.set_value
    data:
      value: 0
    target:
      entity_id: !input seq_status
  - alias: Shut it down on fail code
    action: input_boolean.turn_off
    entity_id: !input lock_control
mode: single
max_exceeded: silent
