# The stuff I need in all my espHome devices. 
# I reserve the right to overwrite any at any time.
# Path to file: esphome/packages/sg_base.yaml

substitutions:
  name: chaloupkaabode-esphpme
  friendly_name: Another Brick in the Wall
  frame_type: esp-idf
  board: esp32dev

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: true

esp32:
  board: ${board}
  framework:
    type: ${frame_type}
    version: recommended

  # Enable logging
logger:

  # Enable Home Assistant API
api:
  encryption:
    key: !secret encrypt

ota:
  password: !secret otapw

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${name} Fallback Hotspot"
    password: !secret ap_password

time:
  # Sync time with HA
  - platform: homeassistant
    id: time_homeassistant
    timezone: "America/Chicago"
    on_time_sync:
      - component.update: sensor_uptime_timestamp

text_sensor:
  # IP Address & SSID
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      icon: mdi:wifi
      entity_category: diagnostic

# Sensors with general information.
sensor:
  # Uptime sensor (internal only).
  - platform: uptime
    id: sensor_uptime
    
  # Uptime timestamp
  - platform: template
    name: "Uptime"
    device_class: "timestamp"
    accuracy_decimals: 0
    update_interval: never
    lambda: |-
      static float timestamp = (
        id(time_homeassistant).utcnow().timestamp - id(sensor_uptime).state
      );
      return timestamp;
    entity_category: diagnostic
    id: sensor_uptime_timestamp

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: WiFi Signal
    icon: mdi:wifi-strength-2
    update_interval: 60s

button:
  - platform: safe_mode
    name: "Safe Mode Boot ${name} ${friendly_name}"
    entity_category: diagnostic
  - platform: restart
    name: "Restart ${name} ${friendly_name}"
    entity_category: diagnostic
