blueprint:
  name: Aqara Magic Cube Zigbee2MQTT - 2022-04-11
  description: 'This Blueprint uses a Zigbee2MQTT built sensor to sort out the multitude
    of commands from the Xiaomi Magic Cube Remote. The split out of functions gives
    you the ability to assign local scripts or functions to do the things you want
    the remote to do. Functions that are left empty will simply do nothing.

    There is sample code to make the template sensor in the help file on GitHib named
    the same as this one and in the community page related to this.

    Within this blueprint there is an event handler that will latch the last command
    that the blueprint finds and sends that to the event buss. From there a simple
    Template sensor can grab it and show you the last action sent. Thie will help  when
    setting up new functions and to troubleshoot strange behaviours.

    This was forked from https://community.home-assistant.io/t/z2m-xiaomi-cube-controller/263006
    V1.2 project authored by luckypoppy and the friends he pulled together to create
    the base. I sincerely thank Him (Them) for their work. I felt there needed to
    be more documentation for rookie users to properly set this up. I had quite a
    few questions and when I saw a few questions in that chat from people struggling,
    I wanted to help. I also had a better idea for troubleshooting info that didn''t
    involve the log writes.'
  source_url: https://github.com/SirGoodenough/HA_Blueprints/blob/master/Automations/Zigbee2MQTT%20-%20Xiaomi%20Cube%20Controller.yaml
  domain: automation
  input:
    remote:
      name: Remote
      description: The entity to put here is the sensor that Z2M imported which is
        named like this> sensor.XXYour_HameXX_action The other 4 sensors can be disabled,
        they will not be used.
      selector:
        entity:
          integration: mqtt
          domain: sensor
          multiple: false
    slide_face_0:
      name: Slide the cube with face 0 up
      description: Face 0 is the one with the 'Aqara' LOGO
      default: []
      selector:
        action: {}
    doubletap_face_0:
      name: Double tap the cube with face 0 up
      description: Face 0 is the one with the 'Aqara' LOGO
      default: []
      selector:
        action: {}
    flipped90_face_0:
      name: Flip the cube 90 degrees to face 0
      description: Face 0 is the one with the 'Aqara' LOGO
      default: []
      selector:
        action: {}
    flipped180_face_0:
      name: Flip the cube 180 degrees to face 0
      description: 'NOTE: This action is trick to master, and should be used sparingly...
        Face 0 is the one with the ''Aqara'' LOGO'
      default: []
      selector:
        action: {}
    rotate_cw_face_0:
      name: Rotate cube clockwise with face 0 up
      description: Face 0 is the one with the 'Aqara' LOGO
      default: []
      selector:
        action: {}
    rotate_ccw_face_0:
      name: Rotate cube counter clockwise with face 0 up
      description: Face 0 is the one with the 'Aqara' LOGO
      default: []
      selector:
        action: {}
    slide_face_1:
      name: Slide the cube with face 1 up
      default: []
      selector:
        action: {}
    doubletap_face_1:
      name: Double tap the cube with face 1 up
      default: []
      selector:
        action: {}
    flipped90_face_1:
      name: Flip the cube 90 degrees to face 1
      default: []
      selector:
        action: {}
    flipped180_face_1:
      name: Flip the cube 180 degrees to face 1
      description: 'NOTE: This action is trick to master, and should be used sparingly...'
      default: []
      selector:
        action: {}
    rotate_cw_face_1:
      name: Rotate cube clockwise with face 1 up
      default: []
      selector:
        action: {}
    rotate_ccw_face_1:
      name: Rotate cube counter clockwise with face 1 up
      default: []
      selector:
        action: {}
    slide_face_2:
      name: Slide the cube with face 2 up
      default: []
      selector:
        action: {}
    doubletap_face_2:
      name: Double tap the cube with face 2 up
      default: []
      selector:
        action: {}
    flipped90_face_2:
      name: Flip the cube 90 degrees to face 2
      default: []
      selector:
        action: {}
    flipped180_face_2:
      name: Flip the cube 180 degrees to face 2
      description: 'NOTE: This action is trick to master, and should be used sparingly...'
      default: []
      selector:
        action: {}
    rotate_cw_face_2:
      name: Rotate cube clockwise with face 2 up
      default: []
      selector:
        action: {}
    rotate_ccw_face_2:
      name: Rotate cube counter clockwise with face 2 up
      default: []
      selector:
        action: {}
    slide_face_3:
      name: Slide the cube with face 3 up
      default: []
      selector:
        action: {}
    doubletap_face_3:
      name: Double tap the cube with face 3 up
      default: []
      selector:
        action: {}
    flipped90_face_3:
      name: Flip the cube 90 degrees to face 3
      default: []
      selector:
        action: {}
    flipped180_face_3:
      name: Flip the cube 180 degrees to face 3
      description: 'NOTE: This action is trick to master, and should be used sparingly...'
      default: []
      selector:
        action: {}
    rotate_cw_face_3:
      name: Rotate cube clockwise with face 3 up
      default: []
      selector:
        action: {}
    rotate_ccw_face_3:
      name: Rotate cube counter clockwise with face 3 up
      default: []
      selector:
        action: {}
    slide_face_4:
      name: Slide the cube with face 4 up
      default: []
      selector:
        action: {}
    doubletap_face_4:
      name: Double tap the cube with face 4 up
      default: []
      selector:
        action: {}
    flipped90_face_4:
      name: Flip the cube 90 degrees to face 4
      default: []
      selector:
        action: {}
    flipped180_face_4:
      name: Flip the cube 180 degrees to face 4
      description: 'NOTE: This action is trick to master, and should be used sparingly...'
      default: []
      selector:
        action: {}
    rotate_cw_face_4:
      name: Rotate cube clockwise with face 4 up
      default: []
      selector:
        action: {}
    rotate_ccw_face_4:
      name: Rotate cube counter clockwise with face 4 up
      default: []
      selector:
        action: {}
    slide_face_5:
      name: Slide the cube with face 5 up
      default: []
      selector:
        action: {}
    doubletap_face_5:
      name: Double tap the cube with face 5 up
      default: []
      selector:
        action: {}
    flipped90_face_5:
      name: Flip the cube 90 degrees to face 5
      default: []
      selector:
        action: {}
    flipped180_face_5:
      name: Flip the cube 180 degrees to face 5
      description: 'NOTE: This action is trick to master, and should be used sparingly...'
      default: []
      selector:
        action: {}
    rotate_cw_face_5:
      name: Rotate cube clockwise with face 5 up
      default: []
      selector:
        action: {}
    rotate_ccw_face_5:
      name: Rotate cube counter clockwise with face 5 up
      default: []
      selector:
        action: {}
    shake:
      name: Shake the cube
      default: []
      selector:
        action: {}
    fall:
      name: Drop the cube
      default: []
      selector:
        action: {}
    slide_any:
      name: Slide the cube with any side
      description: Side doesn't matter on this one. !!Warning!! The automation for
        the specific side will also trigger, so I suggest either use the 'ANY' group
        here or mark the sides on your cube and use the triggers above, not both...
      default: []
      selector:
        action: {}
    doubletap_any:
      name: Double tap the cube with any side
      description: Side doesn't matter on this one. !!Warning!! The automation for
        the specific side will also trigger, so I suggest either use the 'ANY' group
        here or mark the sides on your cube and use the triggers above, not both...
      default: []
      selector:
        action: {}
    flipped90_any:
      name: Flip the cube 90 degrees to any side
      description: Side doesn't matter on this one. !!Warning!! The automation for
        the specific side will also trigger, so I suggest either use the 'ANY' group
        here or mark the sides on your cube and use the triggers above, not both...
      default: []
      selector:
        action: {}
    flipped180_any:
      name: Flip the cube 180 degrees any side
      description: 'NOTE: This action is trick to master, and should be used sparingly...
        Side doesn''t matter on this one. !!Warning!! The automation for the specific
        side will also trigger, so I suggest either use the ''ANY'' group here or
        mark the sides on your cube and use the triggers above, not both...'
      default: []
      selector:
        action: {}
    rotate_cw_any:
      name: Rotate cube clockwise with any side
      description: Side doesn't matter on this one. !!Warning!! The automation for
        the specific side will also trigger, so I suggest either use the 'ANY' group
        here or mark the sides on your cube and use the triggers above, not both...
      default: []
      selector:
        action: {}
    rotate_ccw_any:
      name: Rotate cube counter clockwise with any side
      description: Side doesn't matter on this one. !!Warning!! The automation for
        the specific side will also trigger, so I suggest either use the 'ANY' group
        here or mark the sides on your cube and use the triggers above, not both...
      default: []
      selector:
        action: {}
mode: single
max_exceeded: silent
trigger:
- platform: state
  entity_id: !input 'remote'
condition:
  condition: template
  value_template: '{{ trigger.to_state.attributes.action in (''rotate_right'', ''rotate_left'',
    ''flip90'', ''flip180'', ''slide'', ''tap'', ''shake'', ''fall'') }}'
action:
- variables:
    event: '{{ trigger.to_state.attributes.action }}'
    sub_event: '{{ trigger.to_state.attributes.side }}'
    entity_id: !input 'remote'
    friendly_name: '{{ trigger.to_state.attributes.friendly_name }}'
- alias: Fire Last Action event
  event: cube_last_action
  event_data:
    event: '{{ event }}'
    side: '{{ sub_event }}'
    entity_id: '{{ entity_id }}'
    friendly_name: '{{ friendly_name }}'
- alias: These are for ANY Side
  choose:
  - conditions: '{{ event == "slide" }}'
    sequence: !input 'slide_any'
  - conditions: '{{ event == "tap" }}'
    sequence: !input 'doubletap_any'
  - conditions: '{{ event == "flip90" }}'
    sequence: !input 'flipped90_any'
  - conditions: '{{ event == "flip180" }}'
    sequence: !input 'flipped180_any'
  - conditions: '{{ event == "rotate_right" }}'
    sequence: !input 'rotate_cw_any'
  - conditions: '{{ event == "rotate_left" }}'
    sequence: !input 'rotate_ccw_any'
  - conditions: '{{ event == "shake" }}'
    sequence: !input 'shake'
  - conditions: '{{ event == "fall" }}'
    sequence: !input 'fall'
- choose:
  - conditions: '{{ event == "slide" }}'
    sequence:
    - alias: These are Slide events
      choose:
      - conditions: '{{ sub_event == 0 }}'
        sequence: !input 'slide_face_0'
      - conditions: '{{ sub_event == 1 }}'
        sequence: !input 'slide_face_1'
      - conditions: '{{ sub_event == 2 }}'
        sequence: !input 'slide_face_2'
      - conditions: '{{ sub_event == 3 }}'
        sequence: !input 'slide_face_3'
      - conditions: '{{ sub_event == 4 }}'
        sequence: !input 'slide_face_4'
      - conditions: '{{ sub_event == 5 }}'
        sequence: !input 'slide_face_5'
  - conditions: '{{ event == "tap" }}'
    sequence:
    - alias: These are doubletap events
      choose:
      - conditions: '{{ sub_event == 0 }}'
        sequence: !input 'doubletap_face_0'
      - conditions: '{{ sub_event == 1 }}'
        sequence: !input 'doubletap_face_1'
      - conditions: '{{ sub_event == 2 }}'
        sequence: !input 'doubletap_face_2'
      - conditions: '{{ sub_event == 3 }}'
        sequence: !input 'doubletap_face_3'
      - conditions: '{{ sub_event == 4 }}'
        sequence: !input 'doubletap_face_4'
      - conditions: '{{ sub_event == 5 }}'
        sequence: !input 'doubletap_face_5'
  - conditions: '{{ event == "flip90" }}'
    sequence:
    - alias: These are flipped90 events
      choose:
      - conditions: '{{ sub_event == 0 }}'
        sequence: !input 'flipped90_face_0'
      - conditions: '{{ sub_event == 1 }}'
        sequence: !input 'flipped90_face_1'
      - conditions: '{{ sub_event == 2 }}'
        sequence: !input 'flipped90_face_2'
      - conditions: '{{ sub_event == 3 }}'
        sequence: !input 'flipped90_face_3'
      - conditions: '{{ sub_event == 4 }}'
        sequence: !input 'flipped90_face_4'
      - conditions: '{{ sub_event == 5 }}'
        sequence: !input 'flipped90_face_5'
  - conditions: '{{ event == "flip180" }}'
    sequence:
    - alias: These are flipped180 events
      choose:
      - conditions: '{{ sub_event == 0 }}'
        sequence: !input 'flipped180_face_0'
      - conditions: '{{ sub_event == 1 }}'
        sequence: !input 'flipped180_face_1'
      - conditions: '{{ sub_event == 2 }}'
        sequence: !input 'flipped180_face_2'
      - conditions: '{{ sub_event == 3 }}'
        sequence: !input 'flipped180_face_3'
      - conditions: '{{ sub_event == 4 }}'
        sequence: !input 'flipped180_face_4'
      - conditions: '{{ sub_event == 5 }}'
        sequence: !input 'flipped180_face_5'
  - conditions: '{{ event == "rotate_right" }}'
    sequence:
    - alias: These are Rotate CW events
      choose:
      - conditions: '{{ sub_event == 0 }}'
        sequence: !input 'rotate_cw_face_0'
      - conditions: '{{ sub_event == 1 }}'
        sequence: !input 'rotate_cw_face_1'
      - conditions: '{{ sub_event == 2 }}'
        sequence: !input 'rotate_cw_face_2'
      - conditions: '{{ sub_event == 3 }}'
        sequence: !input 'rotate_cw_face_3'
      - conditions: '{{ sub_event == 4 }}'
        sequence: !input 'rotate_cw_face_4'
      - conditions: '{{ sub_event == 5 }}'
        sequence: !input 'rotate_cw_face_5'
  - conditions: '{{ event == "rotate_left" }}'
    sequence:
    - alias: These are Rotate CCW events
      choose:
      - conditions: '{{ sub_event == 0 }}'
        sequence: !input 'rotate_ccw_face_0'
      - conditions: '{{ sub_event == 1 }}'
        sequence: !input 'rotate_ccw_face_1'
      - conditions: '{{ sub_event == 2 }}'
        sequence: !input 'rotate_ccw_face_2'
      - conditions: '{{ sub_event == 3 }}'
        sequence: !input 'rotate_ccw_face_3'
      - conditions: '{{ sub_event == 4 }}'
        sequence: !input 'rotate_ccw_face_4'
      - conditions: '{{ sub_event == 5 }}'
        sequence: !input 'rotate_ccw_face_5'
- alias: Delay for debounce so that toggle functions work. Also blueprint is in single
    mode.
  delay: 00:00:01
