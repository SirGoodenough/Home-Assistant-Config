blueprint:
  domain: script
  name: TTS_say Message
  description: This is a script that can use any of the 11 integrated TTS Platforms 
    in Home Assistant to send a message to a media player. Some will require 
    Google Type Speakers, some will require Non-Google type speakers. 
    -
    This blueprint **WILL NOT** set-up TTS for you.  You will be given 
    the opportunity to add the incorrect options that will **NOT** allow your TTS 
    to function. Your best road to success will be to add a TTS session manually, 
    and only after that is successfully talking to you should you take the 
    languages and options that work there and apply them in this Blueprint. 
    The safest thing to do other than that is to start with the basic sonfiguration 
    for the TTS_say integration that you are using and add options one at a time. 
    -
    * This Blueprint makes the assumption that you already have a TTS integration installed and you know how it works and how to use it. * 
    -
    You will need to verify that the name you have given to the TTS integration 
    is the Default name or you need to change this blueprint to use the custom 
    name you have set in the TTS !input section. 
    -
    This will be a way to streamline your automations and scripts. It provides 
    specific services that can be called with a single line service call. 
    This is contrasted to the multiline service calls of repeating values spread 
    throughout your configuration. 
    -
    In addition it puts all your TTS specific code in 1 spot, the blueprint, 
    and that allows it to be called over and over. 
    Plus it gives you one place, the blueprint, to repair issues should they arrise.

  homeassistant:
    min_version: 2021.11.0
  input:
    TTS:
      name: Text to Speech Processor
      description: 'Select the configured TTS engine for media_player notifications. SEE for details: https://www.home-assistant.io/integrations/#text-to-speech'
      selector:
        select:
          options:
          - amazon_polly
          - baidu
          - Nabu-Casa cloud
          - google_cloud
          - google_translate
          - marytts
          - microsoft
          - picotts
          - voicerss
          - watson_tts
          - yandextts
    speaker_target:
      name: Device(s) to speak thru
      description: Be sure to select the correct type / brand of device for 
        the TTS you are using.
        Not All speakers work with all TTS engines
      selector:
        entity:
          domain: media_player
    speaker_gender:
      name: Speaker Gender
      description: Select speaker gender male or female. 
        May not work with all TTS engines.
      default: male
      selector:
        select:
          options:
          - female
          - male
    announcement_message:
      name: Spoken message
      description: Type your message here
      default: It matters not what I say.
      selector:
        text:
          multiline: true
    GTS_language:
      name: TTS Google Translate Say Language
      description: Check the complete list of [supported languages] for allowed values.
        [ https://cloud.google.com/text-to-speech/docs/voices The 2 letter lead acronym
        (example- en for english) is all that is used here. The 3 letter ones do not
        work...] This defaults to en (english)
      default: en
      selector:
        select:
          options:
          - af
          - ar
          - bg
          - bn
          - ca
          - ca
          - da
          - de
          - el
          - en
          - es
          - fr
          - gu
          - hi
          - hu
          - id
          - is
          - it
          - ja
          - kn
          - ko
          - lv
          - ml
          - ms
          - nb
          - nl
          - pa
          - pl
          - pt
          - ro
          - ru
          - sk
          - sr
          - sv
          - ta
          - te
          - th
          - tr
          - uk
          - vi
    cloud_language:
      name: TTS Cloud Language
      description: 'Select Language code for tts.cloud_say.  See-> (https://www.nabucasa.com/config/tts/)
        This defaults to en-US (english/US). However all the languages available on
        2021-12-24 were put into the pick list. NOTE: It is possible that not all
        Languages will give you both Genders.'
      default: en-US
      selector:
        select:
          options:
          - ar-EG
          - ar-SA
          - bg-BG
          - ca-ES
          - zh-HK
          - zh-CN
          - zh-TW
          - hr-HR
          - cs-CZ
          - da-DK
          - nl-NL
          - en-AU
          - en-CA
          - en-IN
          - en-IE
          - en-GB
          - en-US
          - fi-FI
          - fr-CA
          - fr-FR
          - fr-CH
          - de-AT
          - de-DE
          - de-CH
          - el-GR
          - he-IL
          - hi-IN
          - hu-HU
          - id-ID
          - it-IT
          - ja-JP
          - ko-KR
          - ms-MY
          - nb-NO
          - pl-PL
          - pt-BR
          - pt-PT
          - ro-RO
          - ru-RU
          - sk-SK
          - sl-SI
          - es-MX
          - es-ES
          - sv-SE
          - ta-IN
          - te-IN
          - th-TH
          - tr-TR
          - vi-VN
mode: queued
variables:
  my_tts: !input 'TTS'
  my_message: !input 'announcement_message'
sequence:
  - choose:
    - alias: tts.amazon_polly_say selected
      conditions: '{{ my_tts == "amazon_polly" }}'
      sequence:
        - service: tts.amazon_polly_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
    - conditions: '{{ my_tts == "baidu" }}'
      sequence:
        - service: tts.baidu_say
          data:
            entity_id: !input 'speaker_target'
            message:  '{{ my_message }}'
    - conditions: '{{ my_tts == "Nabu-Casa cloud" }}'
      sequence:
        - service: tts.cloud_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
            options:
              gender: !input 'speaker_gender'
            language: !input 'cloud_language'
    - conditions: '{{ my_tts == "google_cloud" }}'
      sequence:
        - service: tts.google_cloud_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
    - conditions: '{{ my_tts == "marytts" }}'
      sequence:
        - service: tts.marytts_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
    - conditions: '{{ my_tts == "microsoft" }}'
      sequence:
        - service: tts.microsoft_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
    - conditions: '{{ my_tts == "picotts" }}'
      sequence:
        - service: tts.picotts_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
    - conditions: '{{ my_tts == "voicerss" }}'
      sequence:
        - service: tts.voicerss_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
    - conditions: '{{ my_tts == "watson_tts" }}'
      sequence:
        - service: tts.watson_tts_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
    - conditions: '{{ my_tts == "yandextts" }}'
      sequence:
        - service: tts.yandextts_say
          data:
            entity_id: !input 'speaker_target'
            message: '{{ my_message }}'
    default:
      - alias: Home Assistant Default tts.google_translate_say selected
        service: tts.google_translate_say
        data:
          entity_id: !input 'speaker_target'
          message: '{{ my_message }}'
          language: !input 'GTS_language'
