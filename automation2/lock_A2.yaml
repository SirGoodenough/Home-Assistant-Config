---
  # - id: 80a0cffb-c1a5-43ce-b768-a002cadc19e1
  #   alias: Auto Pad 5 button sequence code
  #   initial_state: "on"
  #   mode: single
  #   max_exceeded: silent

  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.pad_1
  #     id: pad1
  #     from: "off"
  #     to: "on"
  #   - platform: state
  #     entity_id: binary_sensor.pad_2
  #     id: pad2
  #     from: "off"
  #     to: "on"
  #   - platform: state
  #     entity_id: binary_sensor.pad_3
  #     id: pad3
  #     from: "off"
  #     to: "on"
  #   - platform: state
  #     entity_id: binary_sensor.pad_4
  #     id: pad4
  #     from: "off"
  #     to: "on"
  #   - platform: state
  #     entity_id: binary_sensor.pad_5
  #     id: pad5
  #     from: "off"
  #     to: "on"

  #   variables:
  #     seq_code: input_number.lock_state.entity_id

  #   action:
  #     - choose:
  #       - alias: somebody pushed the first button
  #         conditions:
  #           - condition: trigger
  #             id: 'pad1'
  #         sequence:
  #           - alias: Set number to 1
  #             service: input_number.set_value
  #             data:
  #               entity_id: input_number.lock_state
  #               value: 1
  #       - alias: Button 2 pushed
  #         conditions:
  #           - condition: and
  #             conditions:
  #               - condition: trigger
  #                 id: 'pad2'
  #               - condition: template 
  #                 value_template: "{{ is_state('input_number.lock_state', '1.0') }}"
  #         sequence:
  #           - alias: Set number to 3
  #             service: input_number.set_value
  #             data:
  #               entity_id: input_number.lock_state
  #               value: 3
  #       - alias: Button 3 pushed
  #         conditions:
  #           - condition: and
  #             conditions:
  #               - condition: trigger
  #                 id: 'pad3'
  #               - condition: template 
  #                 value_template: "{{ is_state('input_number.lock_state', '3.0') }}"
  #         sequence:
  #           - alias: Set number to 7
  #             service: input_number.set_value
  #             data:
  #               entity_id: input_number.lock_state
  #               value: 7
  #       - alias: Button 4 pushed
  #         conditions:
  #           - condition: and
  #             conditions:
  #               - condition: trigger
  #                 id: 'pad4'
  #               - condition: template 
  #                 value_template: "{{ is_state('input_number.lock_state', '7.0') }}"
  #         sequence:
  #           - alias: Set number to 15
  #             service: input_number.set_value
  #             data:
  #               entity_id: input_number.lock_state
  #               value: 15
  #       - alias: Button 5 pushed
  #         conditions:
  #           - condition: and
  #             conditions:
  #               - condition: trigger
  #                 id: 'pad5'
  #               - condition: template 
  #                 value_template: "{{ is_state('input_number.lock_state', '15.0') }}"
  #         sequence:
  #           - alias: Set number to 31
  #             service: input_number.set_value
  #             data:
  #               entity_id: input_number.lock_state
  #               value: 31
  #           - alias: Enable the Lock
  #             service: input_boolean.turn_on
  #             entity_id: input_boolean.pad_enable
  #           - alias: Leave the lock enabled for a time limit
  #             delay: 60
  #           - alias: Disable the Lock
  #             service: input_boolean.turn_off
  #             entity_id: input_boolean.pad_enable
  #           - alias: Set number to 0
  #             service: input_number.set_value
  #             data:
  #               entity_id: input_number.lock_state
  #               value: 0
  #   #  Default is to abort here if none of the conditions met.
  #       default:
  #         - alias: Reset the number
  #           service: input_number.set_value
  #           data:
  #             entity_id: input_number.lock_state
  #             value: 0
  #         - alias: Shut it down
  #           service: input_boolean.turn_off
  #           entity_id: input_boolean.pad_enable


  - id: 5602f45c-dbe8-4874-a806-f30e119962f5
    alias: test lock
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_boolean.pad_enable
    action:
      - service: light.toggle
        entity_id: light.kitchen_down_lights


  # - id: 650573d6-09ba-4089-9022-6bfbc77e7563
  #   alias: Auto Pad Clear Watchdog
  #   # This will watch for the pad enable and after a delay
  #   #   make certain the pad is cleared (just making sure).
  #   #   It's also a pad reset button.
  #   initial_state: "on"
  #   mode: restart

  #   trigger:
  #   - platform: state
  #     id: pad_enable
  #     entity_id: input_boolean.pad_enable
  #     to: "on"
  #   - platform: template
  #     id: not_zero
  #     value_template: "{% if states.input_number.lock_state.state | int > 0 %} true {% endif %}"
  #   - platform: state
  #     entity_id: binary_sensor.pad_C
  #     id: padC
  #     from: "off"
  #     to: "on"

  #   action:
  #   - choose:
  #     - alias: Delay if found pad enabled
  #       conditions:
  #         - condition: or
  #           conditions:
  #           - condition: trigger
  #             id: 'pad_enable'
  #           - condition: trigger
  #             id: 'not_zero'
  #       sequence:
  #         - delay: '05:00'
  #         - alias: Reset the number
  #           service: input_number.set_value
  #           data:
  #             entity_id: input_number.lock_state
  #             value: 0
  #         - alias: Shut it down
  #           service: input_boolean.turn_off
  #           entity_id: input_boolean.pad_enable
  # # Kill Button Pushed
  #   - alias: Reset the number
  #     service: input_number.set_value
  #     data:
  #       entity_id: input_number.lock_state
  #       value: 0
  #   - alias: Shut it down
  #     service: input_boolean.turn_off
  #     entity_id: input_boolean.pad_enable


  # - id: cec3098c-a651-4b9c-93f1-78d2017c1f00
  #   alias: test two
  #   initial_state: on
  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.pad_1
  #     id: pad1
  #     from: "off"
  #     to: "on"
  #   - platform: state
  #     entity_id: binary_sensor.pad_2
  #     id: pad2
  #     from: "off"
  #     to: "on"
  #   action:
  #   - choose:
  #     - conditions:
  #       - condition: trigger
  #         id: pad1
  #       sequence:
  #         - service: light.turn_on
  #           entity_id: light.kitchen_down_lights
  #     - conditions:
  #       - condition: trigger
  #         id: pad2
  #       sequence:
  #         - service: light.turn_off
  #           entity_id: light.kitchen_down_lights
