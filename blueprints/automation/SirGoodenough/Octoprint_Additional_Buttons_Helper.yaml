blueprint:
  name: Octoprint_Additional_Buttons_Helper- 2023-04-12
  author: SirGoodenough
  description: 'This is Blueprint is provided as a helper for people using the
    Octoprint Plugin called OctoPrint-HomeAssistant. What this does is add 8 buttons,
    4 of which you as the user can set your own G-Codes to for customizing.
    Also adds safe shutdown and presentation functions along with
    Change Filament and Load Filament.


    The first thing to remember is ANYTIME you make ANY changes to this Blueprint,
    you MUST restart the server so that the button entities can rebuild in the
    configuration you have selected. If you don''t restart OctoPrint,
    the change may not be seen and you will wonder why and what is happening.


    To use this you will need the [OctoPrint-MQTT](https://plugins.octoprint.org/plugins/mqtt/) plug-in installed
    along with the [OctoPrint-HomeAssistant](https://github.com/cmroche/OctoPrint-HomeAssistant) plugin.
    You will also need to be connected to an MQTT Broker that your Home Assistant
    instance is also connected to. Set-up for all that is covered within those
    packages.

    This also a Safe Shutdown to your setup that will stop the OctoPrint server
    then shut down the PI & power off your devices safely and cleanly. This works
    either by manually pressing a Home Assistant Button manually or it can be
    triggered as the temperature of the hot end ramps down with adjustable trigger
    points. This feature requires you to have mains power switch(s) to control
    power to the printer and peripherals.

    There is also a Presentation button that raises the Z and moves the print
    out for better access. Caution, this button assumes that the printer knows
    where home is and moves to an absolute position. The intention is to use it
    after a print has happened and you want access to get the item off the platter.
    If pressed when HOME is unknown it might bump into the end of the Y axis.
    Also if the Z is very high, it blindly moves the Z up 40 mm so make sure it 
    looks like there is room.
    These values can be adjusted by editing the Blueprint itself if needed.

    ðŸ“© There is not an official version control system for Blueprints. However I have
    found something that comes pretty close. It is not perfect, but for **MOST**
    Blueprints, it does just fine. I encourage you to check this script out and use
    it to easily check if I have updated this blueprint. ðŸ”— [koter84 Blueprint Update Script](https://github.com/koter84/HomeAssistant_Blueprints_Update/)


    [Community link for this blueprint](https://community.home-assistant.io/t/octoprint-additional-buttons-helper-blueprint/549826)
    '
  source_url: 'https://github.com/SirGoodenough/HA_Blueprints/blob/master/Automations/Octoprint_Additional_Buttons_Helper.yaml'
  homeassistant:
    min_version: 2023.3.0
  domain: automation
  input:
    base_topic:
      name: MQTT Topic for the printer
      description: 'This needs to be the base topic that you added into the Octoprint
        MQTT Plug-in. Use the instruction file for details where to find it.
        '
      selector:
        text:
          multiline: false
    device_id:
      name: Value of the Home Assistant Discovery node id
      description: 'This needs to be the
        ```Discovery settings - Node ID```
        that you added into the Octoprint Homeassistant Discovery Plug-in.
        Use the instruction file for details where to find it.
        '
      selector:
        text:
          multiline: false
    device_name:
      name: Name of the Home Assistant Discovery Device
      description: 'This needs to be the
        ```Device settings - Device name```
        that you added into the Octoprint Homeassistant Discovery Plug-in.
        Use the instruction file for details where to find it.
        '
      selector:
        text:
          multiline: false
    print_status:
      name: print status sensor
      description: 'Sensor that looks like this:

        ```sensor.[Home Assistant Discovery Device]_print_status```

        This was generated by Octoprint Homeassistant Discovery plugin.
        '
      default: sensor.[Home Assistant Discovery Device]_print_status
      selector:
        entity:
          multiple: false
          domain: sensor
    print_state:
      name: print status sensor
      description: 'Sensor that looks like this:

        ```binary_sensor.[Home Assistant Discovery Device]_printing```

        This was generated by Octoprint Homeassistant Discovery plugin.
        '
      default: binary_sensor.[Home Assistant Discovery Device]_printing
      selector:
        entity:
          multiple: false
          domain: binary_sensor
    printhead_temp:
      name: printhead temperature sensor
      description: 'Sensor that looks like this:

        ```sensor.[Home Assistant Discovery Device]_tool_0_temperature```

        This was generated by Octoprint Homeassistant Discovery plugin.
        '
      default: sensor.[Home Assistant Discovery Device]_tool_0_temperature
      selector:
        entity:
          multiple: false
          domain: sensor
    octoprint_shutdown:
      name: octoprint shutdown button
      description: 'Button that looks like this:
        
        ```button.[Home Assistant Discovery Device]_shutdown_system```

        This was generated by Octoprint Homeassistant Discovery plugin.
        '
      default: button.[Home Assistant Discovery Device]_shutdown_system
      selector:
        entity:
          multiple: false
          domain: button
    printer_power_switch:
      name: Mains switch that controls the printer and/or pi mains power
      description: 'This needs to be the Home Assistant name of the switch that
        turns off the power to the printer.

        This would be a mains switch that controls the printer or the PI or
        anything else that you want turned off when the printer is off.
        (something you added)
        Multiples are allowed here.
        '
      selector:
        entity:
          multiple: true
          domain: switch
    asd_u_trig_temp:
      name: Auto Shutdown Upper Trigger
      description: 'Set this to the temperature that you want the extruder
        to be at when the auto-shutdown sequence begins.

        Set this to 0 to prevent auto safe shutdown.
        '
      default: 40
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "\u2103"
    asd_l_trig_temp:
      name: Auto Shutdown Lower Trigger
      description: 'Set this to the temperature that you want the extruder
        to be at when the auto-shutdown sequence no longer applies.

        ***Set this to a number below the Upper Trigger.***

        This is here so that is you turn your printer on and just want to
        work on it, the trigger will not shut the printer down.
        The actual Extruder temperature has to be ABOVE this value to trigger.

        Set this to 0 to allow shutdown anytime the Extruder
        is below the Upper Trigger.
        '
      default: 35
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "\u2103"
    asd_delay:
      name: Auto Shutdown Delay
      description: 'This is the timer that starts as soon as the Extruder temperature
        is in the range between the Upper Trigger and the Lower Trigger.

        If you set this too long & the temperature range too small, the Extruder
        temperature may not be in the range long enough meaning it never triggers.

        If the time is too short, the Auto Shutdown will trigger as the Extruder
        heats up for a print, so *some delay is required* for proper results.

        Some trial and error may be needed to get the result you want.
        '
      default:
        hours: 0
        minutes: 1
        seconds: 0
      selector:
        duration:
    fil_feed:
      name: Feed Length for loading filament
      description: 'Measure the distance the filament travels from the time it
        starts feeding into the feed tube until a bit before it enters the
        heater.
        
        Start shorter and try bigger to prevent filament grinding during setup.
        This will be the distance that the Load Filament button will move the
        filament for you. The Change Filament button always moves the full 400.
        '
      default: 200
      selector:
        number:
          min: 0
          max: 400
          step: 1
    max_y:
      name: "Depth of Y axis"
      description: 'This is the size of your printer bed in the ''Y'' axis.

        It is used for the Presentation Button to move the bed out to the front.
        If you do not plan to use the Presentation Button, this can stay at the
        default.

        If you don''t know what this value should be, look in the
        [instruction file](https://github.com/SirGoodenough/HA_Blueprints/blob/master/Automations/Octoprint_Additional_Buttons_Helper.md) for how to find it.
        '
      default: 100
      selector:
        number:
          min: 0
          max: 500
          step: 1
    home_button: 
      name: Custom command for Home Button
      description: 'This is the Marlin Home Gcode Command, Change as you see fit.'
      default: G28
      selector:
        text:
          multiline: false
    bed_level_button:
      name: Custom GCode command for the Bed Level Button
      description: 'This is the Marlin Bed Level Command, Change as you see fit.'
      default: G29
      selector:
        text:
          multiline: false
    aux_1:
      name: Custom GCode command for Aux Button 1
      description: 'Use this to send a custom GCode command to the printer.
        The default sends a message, but change it to whatever you like.
        '
      default: M117 Test Aux1 button
      selector:
        text:
          multiline: false
    aux_2:
      name: Custom GCode command for Aux Button 2
      description: 'Use this to send a custom GCode command to the printer.
        The default sends a Beep, but change it to whatever you like.
        '
      default: M300 P524
      selector:
        text:
          multiline: false

variables:
  dv_name: !input device_name
  dv_id: !input device_id
  ha_topic: 'homeassistant/button/{{ dv_id }}'
  ha_select_topic: 'homeassistant/select/{{ dv_id }}'
    # Device Parameters for MQTT Discovery
  avty_t: '~mqtt'
  pl_avail: 'connected'
  pl_not_avail: 'disconnected'
  ids: 'octoprint-BP-{{ dv_id }}'
  dname: '{{ dv_name }} Blueprint Helper'
  mf: 'SirGoodenough'
  mdl: 'Octoprint_Discovery_Helper'
  sa: 'home'
  sw: '2023-04-12'
  hw: 'https://github.com/SirGoodenough/HA_Blueprints/blob/master/Automations/Octoprint_Additional_Buttons_Helper.yaml'
  cu: 'https://community.home-assistant.io/t/octoprint-additional-buttons-helper-blueprint/549826'
  # Button Parameters for MQTT Discovery
      # Home Button
  h_local: home
  h_c_topic: '{{ ha_topic }}_{{ h_local | upper }}/config'
  h_bname: '{{ dv_name }} {{ h_local }}'
  h_uniq_id: '{{ dv_id }}_{{ h_local }}'
  h_ic: mdi:home-switch
  h_pl_prs: !input home_button
      # Bed Level Button
  bl_local: bed_level
  bl_c_topic: '{{ ha_topic }}_{{ bl_local | upper }}/config'
  bl_bname: '{{ dv_name }} {{ bl_local }}'
  bl_uniq_id: '{{ dv_id }}_{{ bl_local }}'
  bl_ic: mdi:spirit-level
  bl_pl_prs: !input bed_level_button
      # User Aux 1 Button
  a1_local: aux_1
  a1_c_topic: '{{ ha_topic }}_{{ a1_local | upper }}/config'
  a1_bname: '{{ dv_name }} {{ a1_local }}'
  a1_uniq_id: '{{ dv_id }}_{{ a1_local }}'
  a1_ic: mdi:hand-extended
  a1_pl_prs: !input aux_1
      # User _aux 2 Button
  a2_local: aux_2
  a2_c_topic: '{{ ha_topic }}_{{ a2_local | upper }}/config'
  a2_bname: '{{ dv_name }} {{ a2_local }}'
  a2_uniq_id: '{{ dv_id }}_{{ a2_local }}'
  a2_ic: mdi:hand-extended
  a2_pl_prs: !input aux_2
      # Presentation Button
  p_local: presentation
  p_c_topic: '{{ ha_topic }}_{{ p_local | upper }}/config'
  p_bname: '{{ dv_name }} {{ p_local }}'
  p_uniq_id: '{{ dv_id }}_{{ p_local }}'
  p_ic: mdi:gift
  p_pl_prs: 'PRESS'
      # Safe Shutdown Button
  sd_local: safe_shutdown
  sd_c_topic: '{{ ha_topic }}_{{ sd_local | upper }}/config'
  sd_bname: '{{ dv_name }} {{ sd_local }}'
  sd_uniq_id: '{{ dv_id }}_{{ sd_local }}'
  sd_dev_cla: restart
  sd_pl_prs: 'PRESS'
      # Auto Shutdown Control
  asdc_local: auto_shutdown_ctrl
  asdc_c_topic: '{{ ha_select_topic }}_{{ asdc_local | upper }}/config'
  asdc_bname: '{{ dv_name }} {{ asdc_local }}'
  asdc_uniq_id: '{{ dv_id }}_{{ asdc_local }}'
  asdc_ic: mdi:yin-yang
  asdc_ent_cat: config
  asdc_ops: '{{ ["enable", "disable"] | to_json }}'
      # Load Filament Button
  lf_local: load_filament
  lf_c_topic: '{{ ha_topic }}_{{ lf_local | upper }}/config'
  lf_bname: '{{ dv_name }} {{ lf_local }}'
  lf_uniq_id: '{{ dv_id }}_{{ lf_local }}'
  lf_ic: mdi:waves-arrow-right
  lf_pl_prs: 'PRESS'
      # Change Filament Button
  cf_local: change_filament
  cf_c_topic: '{{ ha_topic }}_{{ cf_local | upper }}/config'
  cf_bname: '{{ dv_name }} {{ cf_local }}'
  cf_uniq_id: '{{ dv_id }}_{{ cf_local }}'
  cf_ic: mdi:waves-arrow-up
  cf_pl_prs: 'PRESS'
    # Action variables
  printing_state: !input print_state
  printer_status: !input print_status
  fil_feed: !input fil_feed
  fil_feed_1st: '
    {# Split 1st time because max-at-a-time feed is 200 #}
    {% if fil_feed < 201 %}{{ fil_feed | int(0) }}{% else %}200{% endif %}'
  fil_feed_2nd: '
    {# Split 2nd half because max-at-a-time feed is 200 #}
    {% if fil_feed > 200 %}{{ fil_feed - 200 | int(0) }}{% else %}0{% endif %}'
  max_y: !input max_y

trigger_variables:
  printer_topic: !input base_topic
  h_cmd_t: '~hassControl/commands'
  bl_cmd_t: '~hassControl/commands'
  a1_cmd_t: '~hassControl/commands'
  a2_cmd_t: '~hassControl/commands'
  p_cmd_t: '{{ printer_topic }}BluePrint/presentation'
  sd_cmd_t: '{{ printer_topic }}BluePrint/safeShutdown'
  asdc_cmd_t: '{{ printer_topic }}BluePrint/autoShutdownControl'
  lf_cmd_t: '{{ printer_topic }}BluePrint/filLoad'
  cf_cmd_t: '{{ printer_topic }}BluePrint/filChange'

trigger:
- platform: state
  entity_id: !input print_status
  id: "start_up"
  to: "Operational"
- platform: numeric_state
  entity_id: !input printhead_temp
  id: "asd_in_range"
  below: !input asd_u_trig_temp
  above: !input asd_l_trig_temp
  for: !input asd_delay
- platform: mqtt
  topic: '{{ p_cmd_t }}'
  payload: "PRESS"
  id: 'Presentation'
- platform: mqtt
  topic: '{{ sd_cmd_t }}'
  payload: "PRESS"
  id: 'shutdown_pressed'
- platform: mqtt
  topic: '{{ lf_cmd_t }}'
  payload: "PRESS"
  id: 'load_filament'
- platform: mqtt
  topic: '{{ cf_cmd_t }}'
  payload: "PRESS"
  id: 'change_filament'

action:
- alias: Determine if there was an actionable event
  choose:
  - conditions:
    - alias: 'Should we shut this down?'
      and:
        - alias: Printer NOT running
          condition: template
          value_template: '{{ states( printing_state ) != "on" }}'
        - alias: NOT the start-up trigger or the presentation trigger
          or:
          - condition: trigger
            id: shutdown_pressed
          - alias: Temp is in the zone and auto is enabled
            and:
              - condition: trigger
                id: asd_in_range
              - '{{ states("select."~dv_name~"_auto_shutdown_ctrl") == "enable" }}'
    sequence:
      - alias: Shut down Octoprint
        service: button.press
        entity_id: !input octoprint_shutdown
      - alias: Hold for the MQTT connection do go away
        wait_template: "{{ is_state( printer_status, 'unavailable' ) }}"
        timeout: "00:05:00"
      - alias: Hold a bit longer to make sure the PI has stopped
        delay: 00:00:59
      - alias: Kill the wall plug
        service: homeassistant.turn_off
        entity_id: !input printer_power_switch
      - alias: Clear the PRESS
        service: mqtt.publish
        data:
          topic: '{{ sd_cmd_t }}'
          payload: ""
          qos: "1"
          retain: false
  - conditions:
    - alias: Present the object front and center
      and:
        - alias: Printer NOT running
          condition: template
          value_template: '{{ states( printing_state ) != "on" }}'
        - alias: Presentation Button Pushed
          condition: trigger
          id: Presentation
    sequence:
      - alias: Jog the Z up a bit so no hitty
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/jog'
          payload: "{{ { \"z\": 40, \"speed\": 2500 } | to_json }}"
          qos: "1"
          retain: false
      - alias: Set to absolute positioning mode
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: G90
          qos: "1"
          retain: false
      - alias: Bring part forward
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: G0 X1 Y{{ max_y }} F2500
          qos: "1"
          retain: false
      - alias: Release the motors
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M84
          qos: "1"
          retain: false
      - alias: Clear the PRESS
        service: mqtt.publish
        data:
          topic: '{{ p_cmd_t }}'
          payload: ""
          qos: "1"
          retain: false
  - conditions:
    - alias: Load new Filament
      and:
        - alias: Printer NOT running
          condition: template
          value_template: '{{ states( printing_state ) != "on" }}'
        - alias: Load Filament Button Pushed
          condition: trigger
          id: load_filament
    sequence:
      - alias: Marlin allow Extruder jog when cold
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M302 P1
          qos: "1"
          retain: false
      - alias: Extruder into relative mode
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M83
          qos: "1"
          retain: false
      - alias: Move the extruder into hotend
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: G1 E{{fil_feed_1st}} F2500
          qos: "1"
          retain: false
      - alias: Move the extruder into hotend
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: G1 E{{fil_feed_2nd}} F2500
          qos: "1"
          retain: false
      - alias: Marlin dis-allow Extruder jog when cold
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M302 P2
          qos: "1"
          retain: false
      - alias: Extruder into absolute mode
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M82
          qos: "1"
          retain: false
      - alias: Extruder Motor release
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M18 E3
          qos: "1"
          retain: false
      - alias: Clear the PRESS
        service: mqtt.publish
        data:
          topic: '{{ lf_cmd_t }}'
          payload: ""
          qos: "1"
          retain: false
  - conditions:
    - alias: Pull the filament out of extruder
      and:
        - alias: Printer NOT running
          condition: template
          value_template: '{{ states( printing_state ) != "on" }}'
        - alias: Change Filament Button Pushed
          condition: trigger
          id: change_filament
    sequence:
      - alias: Marlin allow Extruder jog when cold
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M302 P1
          qos: "1"
          retain: false
      - alias: Extruder into relative mode
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M83
          qos: "1"
          retain: false
      - alias: Move the extruder out
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: G1 E-200 F2500
          qos: "1"
          retain: false
      - alias: Move the extruder out
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: G1 E-200 F2500
          qos: "1"
          retain: false
      - alias: Marlin dis-allow Extruder jog when cold
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M302 P2
          qos: "1"
          retain: false
      - alias: Extruder into absolute mode
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M82
          qos: "1"
          retain: false
      - alias: Extruder Motor release
        service: mqtt.publish
        data:
          topic: '{{ printer_topic }}hassControl/commands'
          payload: M18 E3
          qos: "1"
          retain: false
      - alias: Clear the PRESS
        service: mqtt.publish
        data:
          topic: '{{ cf_cmd_t }}'
          payload: ""
          qos: "1"
          retain: false
  default:
  - alias: Home Button Create
    service: mqtt.publish
    data:
      "topic": "{{ h_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ h_bname }}",
          "uniq_id": "{{ h_uniq_id }}",
          "ic": "{{ h_ic }}",
          "cmd_t": "{{ h_cmd_t }}",
          "pl_prs": "{{ h_pl_prs }}"
        }
  - alias: Bed Level Button Create
    service: mqtt.publish
    data:
      "topic": "{{ bl_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ bl_bname }}",
          "uniq_id": "{{ bl_uniq_id }}",
          "ic": "{{ bl_ic }}",
          "cmd_t": "{{ bl_cmd_t }}",
          "pl_prs": "{{ bl_pl_prs }}"
        }
  - alias: User Aux 1 Button Create
    service: mqtt.publish
    data:
      "topic": "{{ a1_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ a1_bname }}",
          "uniq_id": "{{ a1_uniq_id }}",
          "ic": "{{ a1_ic }}",
          "cmd_t": "{{ a1_cmd_t }}",
          "pl_prs": "{{ a1_pl_prs }}"
        }
  - alias: User Aux 2 Button Create
    service: mqtt.publish
    data:
      "topic": "{{ a2_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ a2_bname }}",
          "uniq_id": "{{ a2_uniq_id }}",
          "ic": "{{ a2_ic }}",
          "cmd_t": "{{ a2_cmd_t }}",
          "pl_prs": "{{ a2_pl_prs }}"
        }
  - alias: Presentation Button Create
    service: mqtt.publish
    data:
      "topic": "{{ p_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ p_bname }}",
          "uniq_id": "{{ p_uniq_id }}",
          "ic": "{{ p_ic }}",
          "cmd_t": "{{ p_cmd_t }}",
          "pl_prs": "{{ p_pl_prs }}"
        }
  - alias: Safe Shutdown Button Create
    service: mqtt.publish
    data:
      "topic": "{{ sd_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ sd_bname }}",
          "uniq_id": "{{ sd_uniq_id }}",
          "dev_cla": "{{ sd_dev_cla }}",
          "cmd_t": "{{ sd_cmd_t }}",
          "pl_prs": "{{ sd_pl_prs }}"
        }
  - alias: Auto Shutdown Control
    service: mqtt.publish
    data:
      "topic": "{{ asdc_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ asdc_bname }}",
          "uniq_id": "{{ asdc_uniq_id }}",
          "ic": "{{ asdc_ic }}",
          "ent_cat": "{{ asdc_ent_cat }}",
          "cmd_t": "{{ asdc_cmd_t }}",
          "ops": {{ asdc_ops }}
        }
  - alias: Load Filament Button Create
    service: mqtt.publish
    data:
      "topic": "{{ lf_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ lf_bname }}",
          "uniq_id": "{{ lf_uniq_id }}",
          "ic": "{{ lf_ic }}",
          "cmd_t": "{{ lf_cmd_t }}",
          "pl_prs": "{{ lf_pl_prs }}"
        }
  - alias: Change Filament Button Create
    service: mqtt.publish
    data:
      "topic": "{{ cf_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ cf_bname }}",
          "uniq_id": "{{ cf_uniq_id }}",
          "ic": "{{ cf_ic }}",
          "cmd_t": "{{ cf_cmd_t }}",
          "pl_prs": "{{ cf_pl_prs }}"
        }

mode: parallel
max: 5
max_exceeded: silent
