- binary_sensor:
    #####################################################
    # Weather                                           #
    #####################################################
    - name: "Dark Outside"
      unique_id: ce7cb6b7-c666-494b-aa3c-4ed79b2f1092
      state: >
        {# Create a dead zone to prevent oscillations. #}
        {%- if states('sensor.gw2000b_v2_2_4_solar_lux') | float(0) > 7004 %}
          false
        {%- elif states('sensor.gw2000b_v2_2_4_solar_lux') | float(0) < 6507 %}
          true
        {% else %}
          {{ states('binary_sensor.dark_outside') }}
        {%- endif %}
      availability: >-
        {% from 'availability_template.jinja' import avail %}
        {{- avail(['sensor.gw2000b_v2_2_4_solar_lux']) | bool -}}
      icon: mdi:sun-clock
      attributes:
        friendly_name: "Dark Outside"

    - name: "AC Enabled"
      unique_id: f885f9fd-b280-439b-81f0-3fdd713393f5
      state: >-
        {% if (
          states('weather.home') | is_defined ) and
          states('weather.home.attributes.temperature') | is_defined %}
            {% set temp = 'weather.home.attributes.temperature' | int( 49 ) %}
            {% if ( temp > 50 ) %}
              true
            {% else %}
              false
            {% endif %}
        {% else %}
          true
        {% endif %}
        {# This is using the MET integration for weather. Available conditions #}
        {# https://github.com/home-assistant/core/blob/70648d6e3b42bb0910e33e5c6a4e1e8c0789d82c/homeassistant/components/met/const.py #}
      availability: >-
        {% from 'availability_template.jinja' import avail %}
        {{- avail(['weather.home.attributes.temperature']) | bool -}}
      icon: mdi:snowflake-alert
      attributes:
        friendly_name: "AC Enabled"

    #####################################################
    # Washer State                                      #
    #####################################################
    - name: "Washer Running"
      unique_id: f890192a-271a-4c27-83ea-c25d342652b2
      state: >-
        {# Set the variable. #}
        {% set wm_amps = states('sensor.wash_machine_energy_current') | float(0.07) %}
        {# Create a dead zone to prevent oscillations. #}
        {%- if wm_amps > 0.16 %}
          true
        {%- elif wm_amps < 0.077 %}
          false
        {%- else %}
          {{ states('binary_sensor.washer_running') }}
        {%- endif %}
      delay_off:
        minutes: 5
      auto_off:
        hours: 1.5
      availability: >-
        {% from 'availability_template.jinja' import avail %}
        {{- avail(['sensor.wash_machine_energy_current']) | bool -}}
      attributes:
        friendly_name: "Washer Running"
      icon: |
        {# Set the variable. #}
        {% set wm_amps = states('sensor.wash_machine_energy_current') | float(0.07) %}
        {# Set the icon #}
        {%- if wm_amps > 0.16 %}
          mdi:washing-machine
        {%- elif wm_amps < 0.077 %}
          mdi:washing-machine-off
        {%- else %}
          mdi:washing-machine-alert
        {%- endif %}

    #####################################################
    # Dryer State                                       #
    #####################################################
    - name: "Dryer Running"
      unique_id: c764264c-815d-44f5-93f7-3afe89900af2
      state: >-
        {# Set the variable. #}
        {% set dy_watts = states('sensor.dryer_power_current') | float(0) %}
        {%- if dy_watts >= 0.1 %}
          true
        {%- elif dy_watts < 0.1 %}
          false
        {%- else %}
          {{ states('binary_sensor.dryer_2') }}
        {%- endif %}
      delay_off:
        minutes: 8
      auto_off:
        hours: 1.5
      availability: >-
        {% from 'availability_template.jinja' import avail %}
        {{- avail(['sensor.dryer_power_current']) | bool -}}
      attributes:
        friendly_name: "Dryer Running"
      icon: >-
        {# Flip sensor for better visual state. #}
        {% set bu_st = is_state('binary_sensor.dryer_2', 'on') %}
        {% if bu_st %}
          mdi:tumble-dryer
        {% elif not bu_st %}
          mdi:tumble-dryer-off
        {% else %}
          mdi:tumble-dryer-alert
        {% endif %}

    #####################################################
    # Bat Printer State                                 #
    #####################################################
    - name: "Bambu Running"
      unique_id: 32176e45-2581-4521-b7e5-f8c31454311f
      state: >-
        {# Set the variable. #}
        {% set bambu = states('sensor.p1s_01p00c4c2100641_print_status') %}
        {% set hot = ["pause", "prepare", "running"] | list %}
        {%- if bambu in hot %}
          true
        {%- else %}
          false
        {%- endif %}
      availability: >-
        {% from 'availability_template.jinja' import avail %}
        {{- avail([ 'sensor.p1s_01p00c4c2100641_print_status' ]) | bool -}}
      attributes:
        friendly_name: "Bambino Running"
      icon: >-
        {# Flip sensor for better visual state. #}
        {% set bu_st = is_state('binary_sensor.bambu_running', 'on') %}
        {% if bu_st %}
          mdi-printer-3d-nozzle-heat
        {% elif not bu_st %}
          mdi-printer-3d-nozzle-off
        {% else %}
          mdi-printer-3d-nozzle-alert-outline
        {% endif %}





  # - name: 'Dark Outside'
  #   unique_id: ce7cb6b7-c666-494b-aa3c-4ed79b2f1092
  #   state: >-
  #     {% if (
  #       states('sensor.openweathermap_cloud_coverage') | is_defined ) %}
  #         {% set elev = state_attr("sun.sun", "elevation") | int(0) %}
  #         {% set cloud = 'sensor.cloud_cover_average' | float(100) %}
  #         {% if ( elev < 6 ) %}
  #           true
  #         {% elif ( elev < 10 and cloud > 51 ) %}
  #           true
  #         {% elif ( elev < 15 and cloud > 73 ) %}
  #           true
  #         {% elif ( elev > 14 and cloud > 88 ) %}
  #           true
  #         {% else %}
  #           false
  #         {% endif %}
  #     {% else %}
  #       true
  #     {% endif %}
  #     {# This is using openweathermap integration for weather & t-sma Filter. #}
  #     {# https://www.home-assistant.io/integrations/openweathermap #}
  #     {# https://www.home-assistant.io/integrations/filter/#time-simple-moving-average #}
  #   availability: >-
  #     {% from 'availability_template.jinja' import avail %}
  #     {{- avail(['sun.sun','sensor.openweathermap_cloud_coverage','sensor.cloud_cover_average']) | bool -}}
  #   icon: mdi:sun-clock
  #   attributes:
  #     friendly_name: "Dark Outside"
