personalert_notify:
  alias: Person alert BP timed persistant_notification
  trace:
    stored_traces: 10
  fields:
    person:
      name: People to watch
      description:
        People Entity names to watch,
        Usually picked by the calling entity.
      required: false
      selector:
        entity:
          multiple: false
          filter:
            domain: person
    place_to:
      name: Where you just arrived
      description:
        Place you are arriving at. Is generally one of your zones.
        Usually picked by the calling entity.
      required: false
      example: home
      selector:
        text:
          multiline: false
          type: text
    place_from:
      name: Where you are last from
      description:
        Place you left from. Is generally one of your zones.
        Usually picked by the calling entity.
      required: false
      example: school
      selector:
        text:
          multiline: false
          type: text
    notify_id:
      name: ID used to clear the notification
      description:
        This is a random text string that is used to clear the notification as needed.
        Usually picked by the calling entity.
      required: false
      example: 6681d33b-c9d7-4678-a6cd-bc4113571806
      selector:
        text:
          multiline: false
          type: text
    phase:
      name: Phase Action
      description:
        Type of action this resolves to.
        Usually picked by the calling entity.
      required: false
      selector:
        select:
          options:
            - enter
            - leave
            - jump

  variables:
      # Define variable data and provide defaults
    _person: placeholder1
    _place_to: placeholder2
    _place_from: placeholder3
    _notify_id: 3479f317-f314-43bb-9e20-d6168b14f78c
    _phase: enter
    flip: >
      {% if phase | default(_phase) == 'leave' %}
        They have left: {{ place_from | default(_place_from) }}
      {% elif phase | default(_phase) == 'enter' %} 
        They are now located at: {{ place_to | default(_place_to) }}
      {% else %}
        They have left: {{ place_from | default(_place_from) }} and are now located at: {{ place_to | default(_place_to) }}
      {% endif %}

  sequence:
  - alias: Notify interested parties with notification_id
    service: persistent_notification.create
    data:
      title: '{{ person | default(_person) + '' Status'' }}'
      message: >
        {{ 'Regarding: ' + person | default(_person) + '\n' + flip +
        '\n\nNotification_id: ' + notify_id | default(_notify_id) }}
      notification_id: '{{ notify_id | default(_notify_id) }}'
  - alias: Add a delay so notification stays up a while
      # Pick your display time. If you set 0 this notification doesn't show.
    delay:
      minutes: 2
  - alias: Kill the notification
    service: persistent_notification.dismiss
    data:
      notification_id: '{{ notify_id | default(_notify_id) }}'

  mode: single
  max_exceeded: silent
  icon: mdi:message-alert-outline

personalert_audio:
  alias: Person alert BP TTS Message & Sound
  trace:
    stored_traces: 10
  fields:
    entities:
      name: Media Player
      description: Set the media player
      required: false
      example: media_player.intercom_group
      selector:
        entity:
          multiple: true
          filter:
            domain: media_player
    mess:
      name: Message
      description: This will set the message
      required: false
      example: "I'm lost"
      selector:
        text:
          multiline: true
          type: text
    lang:
      name: Language
      description:
        Language code. Has to be one that matches the integration used.
        Usually picked by the calling entity.
      required: false
      example: en-US
      selector:
        text:
          multiline: false
          type: text
    gend:
      name: Gender
      description:
        The gender, male or female, of the voice.
      required: false
      default: female
      selector:
        select:
          options:
            - female
            - male
    voice:
      name: tts_cloud (nabu Casa) Voice
      description: >  
        ***Here you need to be careful.***

        If you are OK with the default voice then just leave this field empty.

        If you want to change the voice, you need to pick from [This List, TTS_VOICES section](https://github.com/NabuCasa/hass-nabucasa/blob/master/hass_nabucasa/voice.py)
        being certain to match the country code you picked above with one of
        the voices available for that country code on that list.

        Failure to do so will result in no voice being heard.


        Also picking a voice here results in your pick for Gender to be ignored.

        If you want to know what these sound like, well, you are just going to
        have to try them and see what you like.

        If you are en-US, you might want to paste this in there for some fun:

          {{ ("JennyNeural",
          "AIGenerate1Neural",
          "AIGenerate2Neural",
          "AmberNeural",
          "AnaNeural",
          "AriaNeural",
          "AshleyNeural",
          "BrandonNeural",
          "ChristopherNeural",
          "CoraNeural",
          "DavisNeural",
          "ElizabethNeural",
          "EricNeural",
          "GuyNeural",
          "JacobNeural",
          "JaneNeural",
          "JasonNeural",
          "JennyMultilingualNeural",
          "MichelleNeural",
          "MonicaNeural",
          "NancyNeural",
          "RogerNeural",
          "SaraNeural",
          "SteffanNeural",
          "TonyNeural") | random }}
      required: false
      example: JennyNeural
      default: []
      selector:
        text:
          multiline: true

  variables:
      # Define variable data and provide default (change 'entities' 4 your system)
    _entities: media_player.intercom_group
    _mess: "I'm lost"
    _lang: en-US
    _gend: male
    _voice: []

  sequence:
  - alias: Send sound file to Media Player
    service: media_player.play_media
    data:
      entity_id: "{{ entities | default(_entities)}}"
      media_content_id:
        "media-source://media_source/local/mp3/OK_tone.wav"
      media_content_type: audio/mp3
  - alias: Delay to let sounder to complete. Adjust as needed.
    delay: 00:00:03
  - alias: TTS action call
    service: tts.cloud_say
    data:
      entity_id: "{{ entities | default(_entities) }}"
      message: "{{ mess | default(_mess) }}"
      language: "{{ lang | default(_lang) }}"
      options:
        gender: "{{ gend | default(_gend) }}"
        voice: "{{ voice | default(_voice) }}"

  mode: single
  max_exceeded: silent
  icon: mdi:message-alert-outline
