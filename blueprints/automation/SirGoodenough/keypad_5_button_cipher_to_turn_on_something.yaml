blueprint:
  name: Keypad 5 button cypher to turn on something - 2023-08-07
  author: SirGoodenough
  description: >
    This will accept any 5 button presses or ```Binary Sensor``` detections and
    use them to preform an action. RE open a lock, or whatever.

    ğŸ“© There is not an official version control system for Blueprints. However I have
    found something that comes pretty close. It is not perfect, but for **MOST**
    Blueprints, it does just fine. I encourage you to check this script out and use
    it to easily check if I have updated this blueprint. ğŸ”— [koter84 Blueprint Update Script](https://github.com/koter84/HomeAssistant_Blueprints_Update/)


    [Community link for this blueprint](https://community.home-assistant.io/t/keypad-cipher-code-for-5-button-presses-before-you-turn-on-an-input-boolean/322385)
  source_url: https://github.com/SirGoodenough/HA_Blueprints/blob/master/Automations/keypad_5_button_cipher_to_turn_on_something.yaml
  domain: automation
  homeassistant:
    min_version: 2023.8.0
  input:
    button_one:
      name: Button Press One
      description: '```Binary Sensor``` for First Button Pressed'
      selector:
        entity:
          filter:
            - domain: binary_sensor
          multiple: false
    button_two:
      name: Button Press Two
      description: '```Binary Sensor``` for Second Button Pressed'
      selector:
        entity:
          filter:
            - domain: binary_sensor
          multiple: false
    button_three:
      name: Button Press Three
      description: '```Binary Sensor``` for Third Button Pressed'
      selector:
        entity:
          filter:
            - domain: binary_sensor
          multiple: false
    button_four:
      name: Button Press Four
      description: '```Binary Sensor``` for Forth Button Pressed'
      selector:
        entity:
          filter:
            - domain: binary_sensor
          multiple: false
    button_five:
      name: Button Press Five
      description: '```Binary Sensor``` for Fifth Button Pressed'
      selector:
        entity:
          filter:
            - domain: binary_sensor
          multiple: false
    lock_control:
      name: Buffer for the Final Lock Enable
      description: '```input_boolean``` - Final Enable to trigger your lock or action'
      selector:
        entity:
          filter:
            - domain: input_boolean
          multiple: false
    seq_status:
      name: Control Sequence Status Placeholder
      description: >
        ```input_number``` - The internal use lock sequence number (set range
        to 0 to 100) You will need one of these for every copy of this automation,  IE
        one for every lock code.
      selector:
        entity:
          filter:
            - domain: input_number
          multiple: false
    on_timer:
      name: Lock On Time in Seconds
      description: Time output signal is on in seconds. Generally 5 seconds is good
        here.
      default: 60
      selector:
        number:
          min: 5.0
          max: 360.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0
    additional_conditions:
      name: Additional conditions
      description: |
        Extra conditions you may want to add to this automation 
        (Example: Home occupied, TV on, etc)
      default: []
      selector:
        condition:

trigger:
- platform: state
  entity_id: !input 'button_one'
  id: pad1
  from: 'off'
  to: 'on'
- platform: state
  entity_id: !input 'button_two'
  id: pad2
  from: 'off'
  to: 'on'
- platform: state
  entity_id: !input 'button_three'
  id: pad3
  from: 'off'
  to: 'on'
- platform: state
  entity_id: !input 'button_four'
  id: pad4
  from: 'off'
  to: 'on'
- platform: state
  entity_id: !input 'button_five'
  id: pad5
  from: 'off'
  to: 'on'

variables:
  seq_status_ent: !input 'seq_status'
  seq_status_last: '{{ expand(seq_status_ent)[0].last_changed | as_timestamp }}'
  seq_status_val: '{{ expand(seq_status_ent)[0].state }}'
  tnow: '{{ as_timestamp(now()) }}'

condition: !input additional_conditions

action:
- alias: Reset seq number to 99 if timeout occurred
  service: input_number.set_value
  data:
    entity_id: !input 'seq_status'
    value: >
      {% if seq_status_last < tnow - (5*60) %}
        {# It's been too long so reset the sequence #}
        99
      {% else %} 
        {# Timing is good, so accept the value set #}
        {{ seq_status_val }}
      {% endif %}
- choose:
  - alias: Somebody pushed the first button
    conditions:
    - condition: trigger
      id: pad1
    sequence:
    - alias: Set seq number to 1
      service: input_number.set_value
      data:
        entity_id: !input 'seq_status'
        value: 1
  - alias: Button 2 pushed in correct sequence number order
    conditions:
    - and:
      - condition: trigger
        id: pad2
      - condition: template
        value_template: '{{ is_state( seq_status_ent, ''1.0'') }}'
    sequence:
    - alias: Set seq number to 3
      service: input_number.set_value
      data:
        value: 3
      target:
        entity_id: !input 'seq_status'
  - alias: Button 3 pushed in correct sequence number order
    conditions:
    - and:
      - condition: trigger
        id: pad3
      - condition: template
        value_template: '{{ is_state( seq_status_ent, ''3.0'') }}'
    sequence:
    - alias: Set seq number to 7
      service: input_number.set_value
      data:
        value: 7
      target:
        entity_id: !input 'seq_status'
  - alias: Button 4 pushed in correct sequence number order
    conditions:
    - and:
      - condition: trigger
        id: pad4
      - condition: template
        value_template: '{{ is_state( seq_status_ent, ''7.0'') }}'
    sequence:
    - alias: Set seq number to 15
      service: input_number.set_value
      data:
        value: 15
      target:
        entity_id: !input 'seq_status'
  - alias: Button 5 pushed in correct sequence number order
    conditions:
    - and:
      - condition: trigger
        id: pad5
      - condition: template
        value_template: '{{ is_state( seq_status_ent, ''15.0'') }}'
    sequence:
    - alias: Set seq number to 31
      service: input_number.set_value
      data:
        value: 31
      target:
        entity_id: !input 'seq_status'
    - alias: Enable the Lock
      service: input_boolean.turn_on
      entity_id: !input 'lock_control'
    - alias: Leave the lock enabled for a time limit
      delay: !input 'on_timer'
    - alias: Disable the Lock normal
      service: input_boolean.turn_off
      entity_id: !input 'lock_control'
    - alias: Reset status number normal
      service: input_number.set_value
      data:
        value: 0
      target:
        entity_id: !input 'seq_status'
  default:
  - alias: Reset status number on fail code
    service: input_number.set_value
    data:
      value: 0
    target:
      entity_id: !input 'seq_status'
  - alias: Shut it down on fail code
    service: input_boolean.turn_off
    entity_id: !input 'lock_control'

mode: single
max_exceeded: silent
