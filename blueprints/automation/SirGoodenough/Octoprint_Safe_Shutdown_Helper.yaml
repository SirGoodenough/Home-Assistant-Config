blueprint:
  name: Octoprint_Discovery_Helper - 2023-03-14
  author: SirGoodenough
  description: 'This is Blueprint is provided as a helper for people using the
    Octoprint Plugin called [OctoPrint-HomeAssistant](https://github.com/cmroche/OctoPrint-HomeAssistant).
    Within that Plugin there are several suggested Home Assistant Scripts &
    automations, and this will build them all for you.


    ðŸ“© There is not an official version control system for Blueprints. However I have
    found something that comes pretty close. It is not perfect, but for **MOST**
    Blueprints, it does just fine. I encourage you to check this script out and use
    it to easily check if I have updated this blueprint. ðŸ”— [koter84 Blueprint Update Script](https://github.com/koter84/HomeAssistant_Blueprints_Update/)


    [Community link for this blueprint](https://here)
    '
  # source_url: 'https://raw.githubusercontent.com/SirGoodenough/HA_Blueprints/Octoprint/Automations/Octoprint_Discovery_Helper.yaml'
  homeassistant:
    min_version: 2023.3.0
  domain: automation
  input:
    base_topic:
      name: MQTT Topic for the printer
      description: 'This needs to be the base topic that you added into the Octoprint
        MQTT Plug-in. Use the instruction file for details where to find it.
        '
      selector:
        text:
          multiline: false
    device_id:
      name: Valuee of the Home Assistant Discovery node id
      description: 'This needs to be the 
        ```Discovery settings - Node ID``` 
        that you added into the Octoprint Homeassistant Discovery Plug-in. 
        USe the instruction file for details where to find it.
        '
      selector:
        text:
          multiline: false
    device_name:
      name: Name of the Home Assistant Discovery Device
      description: 'This needs to be the 
        ```Device settings - Device name``` 
        that you added into the Octoprint Homeassistant Discovery Plug-in. 
        USe the instruction file for details where to find it.
        '
      selector:
        text:
          multiline: false
    print_status:
      name: print status sensor
      description: 'Sensor that looks like this:
        ```sensor.[Home Assistant Discovery Device]_print_status```
        Was generated by octoprint homeassistant discovery.
        '
      default: sensor.[Home Assistant Discovery Device]_print_status
      selector:
        entity:
          multiple: false
          domain: sensor
    print_state:
      name: print status sensor
      description: 'Sensor that looks like this:
        ```binary_sensor.[Home Assistant Discovery Device]_printing```
        Was generated by octoprint homeassistant discovery.
        '
      default: binary_sensor.[Home Assistant Discovery Device]_printing
      selector:
        entity:
          multiple: false
          domain: binary_sensor
    printhead_temp:
      name: printhead temperature sensor
      description: 'Sensor that looks like this:
        ```sensor.[Home Assistant Discovery Device]_tool_0_temperature```
        Was generated by octoprint homeassistant discovery.
        '
      default: sensor.[Home Assistant Discovery Device]_tool_0_temperature
      selector:
        entity:
          multiple: false
          domain: sensor
    octoprint_shutdown:
      name: octoprint shutdown button
      description: 'Button that looks like this:
        ```button.[Home Assistant Discovery Device]__shutdown_system```
        Was generated by octoprint homeassistant discovery.
        '
      default: button.[Home Assistant Discovery Device]_shutdown_system
      selector:
        entity:
          multiple: false
          domain: button
    safe_shutdown:
      name: safe shutdown button
      description: 'Button that looks like this:
        ```button.[Home Assistant Discovery Device]_safe_shutdown_button```
        For the first run of this blueprint install any button so the BP
        will run. This is a chicken-egg problem where the button will not
        actually exist UNTIL AFTER the BP is first run. 
        You will have to come back and change this entry to the actual button
        created for safe shutdown.
        It will exist after the BP sucessfully runs triggered by starting
        Octoprint from off.
        '
      default: button.[Home Assistant Discovery Device]_safe_shutdown_button
      selector:
        entity:
          multiple: false
          domain: button

variables:
  printer_topic: !input base_topic
  dv_name: !input device_name
  dv_id: !input device_id
  ha_topic: 'homeassistant/button/{{ dv_id }}'
    # Device Parameters for MQTT Discovery
  avty_t: '~mqtt'
  pl_avail: 'connected'
  pl_not_avail: 'disconnected'
  ids: 'octoprint-BP_{{ dv_id }}'
  dname: '{{ dv_name }} Blueprint Helper'
  mf: 'SirGoodenough'
  mdl: 'Octoprint_Discovery_Helper'
  sa: 'home'
  sw: '2023-03-14'
  hw: 'https://TBD'
  cu: 'https://TBD'
    # Button Parameters for MQTT Discovery
      # Safe Shutdown Button
  sd_local: safe_shutdown
  sd_c_topic: '{{ ha_topic }}_{{ sd_local | upper }}/config'
  sd_bname: '{{ dv_name }} {{ sd_local }}'
  sd_uniq_id: '{{ dv_id }}_{{ sd_local }}'
  sd_ic: mdi-power
  sd_cmd_t: '~/blueprint/shutdown'
  sd_pl_prs: 'press'
    # Action variables
  printing_state: !input print_state
  printer_status: !input print_status

trigger:
- platform: state
  entity_id: !input print_status
  id: "start_up"
  to: "Operational"
- platform: numeric_state
  entity_id: !input printhead_temp
  id: "in_range"
  below: "40.0"
  above: "35.0"
  for: 00:01:00
- platform: state
  entity_id: !input safe_shutdown
  id: "shutdown_pressed"

action:
- alias: Determine if there was an actionable event
  choose:
  - conditions:
    - alias: Printer NOT running
      and:
        - condition: template
          value_template: '{{ states( printing_state ) != "on" }}'
        - alias: NOT the start-up trigger
          or:
          - condition: trigger
            id: in_range
          - condition: trigger
            id: shutdown_pressed
    sequence:
      - alias: Shut down Octoprint
        service: button.press
        entity_id: !input octoprint_shutdown
      - alias: Hold for the MQTT connection do go away
        wait_template: "{{ is_state( printer_status, 'unavailable' ) }}"
        timeout: "00:05:00"
      - alias: Hold a bit longer to make sure the PI has stopped
        delay: 00:00:59
      - alias: Kill the wall plug
        service: homeassistant.turn_off
        entity_id: switch.sonoff_s40lite_switch_2

  default:
  - alias: Safe Shutdown Button Create
    service: mqtt.publish
    data:
      "topic": "{{ sd_c_topic }}"
      "retain": true
      "payload": >
        { "~": "{{ printer_topic }}",
          "avty_t": "{{ avty_t }}",
          "pl_avail": "{{ pl_avail }}",
          "pl_not_avail": "{{ pl_not_avail }}",
          "dev": {
            "ids": "{{ ids }}",
            "name": "{{ dname }}",
            "mf": "{{ mf }}",
            "mdl": "{{ mdl }}",
            "sa": "{{ sa }}",
            "sw": "{{ sw }}",
            "hw": "{{ hw }}",
            "cu": "{{ cu }}"
          },
          "name": "{{ sd_bname }}",
          "uniq_id": "{{ sd_uniq_id }}",
          "ic": "{{ sd_ic }}",
          "cmd_t": "{{ sd_cmd_t }}",
          "pl_prs": "{{ sd_pl_prs }}"
        }
mode: parallel
max: 5
max_exceeded: silent
