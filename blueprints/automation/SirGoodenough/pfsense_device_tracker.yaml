blueprint:
  name: Notify if Device goes Down.
  description: 'This is intended to be used with pfSense HACS Integration: 
    [GitHub - travisghansen/hass-pfsense: pfSense integration with Home Assistant](https://github.com/travisghansen/hass-pfsense)
    
    However it could be used with any device tracker.
    
    It will create a persistant notification when triggered. 
    Triggers / notifications can be enabled for a time period each day and/or for 
    specific days of the week. !env_var 
    There is also the ability to roll your own specific notification as an action statement.
    
    If you want to send these notifications to a mobile device, i suggest you look at
    the following blueprint to use in conjunction with this blueprint.

    [![Open your Home Assistant instance and show the blueprint import dialog with a specific blueprint pre-filled.](https://my.home-assistant.io/badges/blueprint_import.svg)](https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https%3A%2F%2Fgithub.com%2FEPMatt%2Fawesome-ha-blueprints%2Fblob%2Fmain%2Fblueprints%2Fautomation%2Fpersistent_notification_to_mobile%2Fpersistent_notification_to_mobile.yaml)
    '
  domain: automation
  homeassistant:
    min_version: 2022.5.2
  input:
    trackees:
      name: Devices to Track
      description: 'Select all the devices that you would like to track with this Blueprint.
        Multiples are allowed.'
      selector:
        entity:
          domain: device_tracker
          multiple: true
    notification_id:
      name: Optional Notification ID
      description: 'This is an optional parameter to be used for notifications to
        mobile devices and other things.
        This will be converted to all letters and / or numbers with no spaces,
        so keep that in mind when referencing it later.
        
        If you don''t know what it is, you probably should leave it blank.'
      default: []
      selector:
        text: {}
    skip_p_notifcation:
      name: 'Choose to send persistant notification (or not).'
      description: TRUE means a Persistant Notification is sent, FALSE means it is not.
      default: true
      selector:
        boolean:
    alt_notify:
      name: Manual Notifications
      description: Enter the action yaml for any specific notification or action you would like to perform.
      default: []
      selector:
        action: {}
    notify_enable_time:
      name: Time of day to begin notifications
      description: 'Set this for the time of day you want to allow notifications to begin.

        Leave as is to always be enabled.'
      default: 00:00:00
      selector:
        time: {}
    notify_disable_time:
      name: Time of day to end notifications
      description: 'Set this for the time of day you want notificatons to end.

        Leave as is to always be enabled.'
      default: 00:00:00
      selector:
        time: {}
    weekday:
      name: Day of the week to allow notifications
      description: 'Change options if you want to include or exclude any specific day.

        All days selected by default.'
      default:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
      selector:
        select:
          options:
          - label: Monday
            value: mon
          - label: Tuesday
            value: tue
          - label: Wednesday
            value: wed
          - label: Thursday
            value: thu
          - label: Friday
            value: fri
          - label: Saturday
            value: sat
          - label: Sunday
            value: sun
          custom_value: false
          multiple: true
variables:
  alt_notify_var: !input alt_notify
  notification_id_var: !input notification_id 
  notify_id: '{{ notification_id_var | regex_replace("[^A-Za-z0-9]", "") }}'
trigger:
  - platform: state
    id: go_when_any_of_the_devices_change_from_home_to_anything_else
    entity_id: !input trackees
    from: "home"
condition:
  - alias: Only allow execution within selected Hours / Weekdays
    condition: time
    after: !input 'notify_enable_time'
    before: !input 'notify_disable_time'
    weekday: !input 'weekday'
action:
- alias: Persistant Notifications
  choose:
  - conditions: '{{ skip_p_notifcation == false }}'
    sequence: []
  - conditions: '{{ notify_id | length > 0 }}'
    sequence: 
    - alias: Notify interested parties with Notification ID
      service: persistent_notification.create
      data:
        title: '{{ states[trigger.to_state.entity_id].name + '' Status'' }}'
        message: '{{ states[trigger.to_state.entity_id].name + '' is '' + states[trigger.to_state.entity_id].state }}

          Full Attributes List:

          {{ states[trigger.to_state.entity_id] }}'
        notification_id: '{{ notify_id }}'
  default:
    - alias: Notify interested parties without Notifivation ID
      service: persistent_notification.create
      data:
        title: '{{ states[trigger.to_state.entity_id].name + '' Status'' }}'
        message: '{{ states[trigger.to_state.entity_id].name + '' is '' + states[trigger.to_state.entity_id].state }}

          Full Attributes List:

          {{ states[trigger.to_state.entity_id] }}'
- alias: Do something on every trigger
  if: '{{ alt_notify_var | length > 0 }}'
  then: !input 'alt_notify'
mode: parallel
max: 15
