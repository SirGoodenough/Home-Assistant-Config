tts_side_doorbell:
  alias: TTS Side Doorbell
  use_blueprint:
    path: SirGoodenough/tts_All_Message_Script_Blueprint.yaml
    input:
      GTS_language: en
      TTS: tts.cloud_say
      nabu_azure_language: en-US
      speaker_target: media_player.intercom_group
      announcement_message: >
        {% if states('input_boolean.rain') == 'on' %}
          "It's raining. Please check side door for packages."
        {% else %}
          "Someone rang the side doorbell."
        {% endif %} 
  icon: mdi:bell-circle-outline

media_player_side_doorbell:
  alias: Media Player Side DoorBell
  use_blueprint:
    path: SirGoodenough/play_media_file_script.yaml
    input:
      speaker_target: media_player.home_group
  icon: mdi:bell-circle

media_player_back_doorbell_motion:
  alias: Media Player Back DoorBell Motion
  use_blueprint:
    path: SirGoodenough/play_media_file_script.yaml
    input:
      file_2_play: '{{ ("media-source://media_source/local/mp3/jaws_x.mp3",
      "media-source://media_source/local/mp3/steps.mp3")|random }}'
      speaker_target: media_player.intercom_group
  icon: mdi:motion-sensor

tts_back_doorbell:
  alias: TTS Back Doorbell
  use_blueprint:
    path: SirGoodenough/tts_All_Message_Script_Blueprint.yaml
    input:
      GTS_language: en
      TTS: tts.cloud_say
      nabu_azure_language: en-US
      speaker_target: media_player.intercom_group
      announcement_message: >
        {% if states('input_boolean.rain') == 'on' %}
          "It's raining. Please check Back door for packages."
        {% else %}
          "Someone rang the back doorbell."
        {% endif %} 
  icon: mdi:doorbell

media_player_back_doorbell_ding:
  alias: Media Player Back DoorBell Ding
  use_blueprint:
    path: SirGoodenough/play_media_file_script.yaml
    input:
      speaker_target: media_player.home_group
      file_2_play: media-source://media_source/local/mp3/doorbell-2.mp3
  icon: mdi:doorbell-video

tts_front_doorbell:
  alias: TTS Front Doorbell
  use_blueprint:
    path: SirGoodenough/tts_All_Message_Script_Blueprint.yaml
    input:
      GTS_language: en
      TTS: tts.cloud_say
      nabu_azure_language: en-US
      speaker_target: media_player.intercom_group
      announcement_message: >
        {% if states('input_boolean.rain') == 'on' %}
          "It's raining. Please check front door for packages."
        {% else %}
          "Someone rang the front doorbell."
        {% endif %} 
  icon: mdi:doorbell-video

media_player_front_doorbell_ding:
  alias: Media Player Front DoorBell Ding
  use_blueprint:
    path: SirGoodenough/play_media_file_script.yaml
    input:
      speaker_target: media_player.home_group
      file_2_play: media-source://media_source/local/mp3/doorbell-1.mp3
  icon: mdi:doorbell-video

media_player_front_doorbell_motion:
  alias: Media Player Front DoorBell Motion
  use_blueprint:
    path: SirGoodenough/play_media_file_script.yaml
    input:
      speaker_target: media_player.intercom_group
      file_2_play: >
        {% if states('input_boolean.rain') == 'on' %}
          media-source://media_source/local/mp3/big-rain-drops-2-6824.mp3
        {% else %}
          media-source://media_source/local/mp3/Ring_-_Windchimes.mp3
        {% endif %}
  icon: mdi:motion-sensor

qotd:
  alias: QOTD
  use_blueprint:
    path: SirGoodenough/tts_All_Message_Script_Blueprint.yaml
    input:
      TTS: tts.cloud_say
      announcement_message: "{%- if states.sensor.qotd.attributes.entries | default('')
        -%}\n  {% set source = states.sensor.qotd.attributes.entries[0]['title'] %}\n
        \ {% set quote = states.sensor.qotd.attributes.entries[0]['summary'] %}\n{%
        else %}\n  {% set source = \"Kalupka Abode\" %}\n  {% set quote = (\n    \"That
        damn sensor is down, again.\",\n    \"We don't serve your kind here, quotes.\",\n
        \   \"Random, random, randomness.\",\n    \"Did you hear the joke about paper?
        It's really terrible.\",\n    \"Hey Google, what time is it?\",\n    \"Up
        North is the Best.\"\n  ) | random %}\n  {% endif %}\n{{ quote + \".\\n  quote
        by \" + source }}"
      speaker_target:
      - media_player.jen_group
      nabu_azure_voice: '{{ ("JennyNeural",

        "AIGenerate1Neural",

        "AIGenerate2Neural",

        "AmberNeural",

        "AnaNeural",

        "AriaNeural",

        "AshleyNeural",

        "BrandonNeural",

        "ChristopherNeural",

        "CoraNeural",

        "DavisNeural",

        "ElizabethNeural",

        "EricNeural",

        "GuyNeural",

        "JacobNeural",

        "JaneNeural",

        "JasonNeural",

        "JennyMultilingualNeural",

        "MichelleNeural",

        "MonicaNeural",

        "NancyNeural",

        "RogerNeural",

        "SaraNeural",

        "SteffanNeural",

        "TonyNeural") | random }}'
      b4_action:
      - delay:
          hours: 0
          minutes: 0
          seconds: 3
          milliseconds: 500
      after_action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.qotd
        data: {}
  icon: mdi:book
  
front_motion_joke:
  alias: front motion joke
  use_blueprint:
    path: SirGoodenough/tts_All_Message_Script_Blueprint.yaml
    input:
      TTS: tts.cloud_say
      b4_action:
      - service: script.media_player_front_doorbell_motion
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 4
          milliseconds: 0
      after_action:
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.joke
        data: {}
      speaker_target:
      - media_player.intercom_group
      nabu_azure_voice: '{{ ("JennyNeural",

        "AIGenerate1Neural",

        "AIGenerate2Neural",

        "AmberNeural",

        "AnaNeural",

        "AriaNeural",

        "AshleyNeural",

        "BrandonNeural",

        "ChristopherNeural",

        "CoraNeural",

        "DavisNeural",

        "ElizabethNeural",

        "EricNeural",

        "GuyNeural",

        "JacobNeural",

        "JaneNeural",

        "JasonNeural",

        "JennyMultilingualNeural",

        "MichelleNeural",

        "MonicaNeural",

        "NancyNeural",

        "RogerNeural",

        "SaraNeural",

        "SteffanNeural",

        "TonyNeural") | random }}'
      announcement_message: '{{ states(''sensor.joke'') }}'
  icon: mdi:drama-masks