blueprint:
  source_url: 'https://gist.githubusercontent.com/tvwerkhoven/e2b30274d2bb054d60bca2c7cd45ebdf/raw/notify-high-sensor-value.yaml'
  name: High sensor value notification
  description: Notify users of high sensor values (e.g. CO2, temp, PM2.5), and again when value drops below acceptable level
  domain: automation
  input:
    trigger_sensor:
      name: Trigger sensor
      description: E.g. CO2, PM2.5, temperature
      selector:
        entity:
          domain: sensor
    trigger_level_high:
      name: Trigger level high
      description: Notify above this level
      selector:
        number:
          mode: box
          min: -50
          max: 1250
    trigger_level_low:
      name: Trigger level low
      description: Notify again below this level
      selector:
        number:
          mode: box
          min: -50
          max: 1250

alias: High sensor value notification+
description: Notify when high sensor values are detected somewhere
trigger:
  - platform: numeric_state
    entity_id: !input "trigger_sensor"
    above: !input "trigger_level_high"
variables:
  trigger_sensor_var: !input "trigger_sensor"
  trigger_level_high_var: !input "trigger_level_high"
  trigger_level_low_var: !input "trigger_level_low"
condition: []
action:
  - repeat:
      until:
        - condition: numeric_state
          entity_id: !input "trigger_sensor"
          below: !input 'trigger_level_low'
      sequence:
        - service: notify.notify
          data:
            message: >-
              High reading of {{state_attr(trigger_sensor_var, 'friendly_name')}} 
              at {{ states(trigger_sensor_var) }}{{state_attr(trigger_sensor_var, 'unit_of_measurement')  }}
        - wait_for_trigger:
            - platform: numeric_state
              entity_id: !input "trigger_sensor"
              below: !input 'trigger_level_low'
          timeout:
            minutes: 60
          continue_on_timeout: false
        - service: notify.notify
          data:
            message: >-
              Reading of {{state_attr(trigger_sensor_var, 'friendly_name')}} back to normal
              at {{ states(trigger_sensor_var) }}{{state_attr(trigger_sensor_var, 'unit_of_measurement')  }}
mode: single
