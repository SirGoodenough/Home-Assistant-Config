blueprint:
  name: Notify if selected Device_Tracker goes down and do something about it - 2023-03-01
  author: SirGoodenough
  description: 'This is intended to be used with pfSense HACS Integration: 
    [GitHub - travisghansen/hass-pfsense: pfSense integration with Home Assistant ](https://github.com/travisghansen/hass-pfsense)
    . However it could be used with any device tracker that reports ```home``` when the 
    device is up and something else when it isn''t.

    It will create a persistent notification when triggered.

    Triggers / notifications can be enabled for a time period each day and/or for 
    specific days of the week. There is also the ability to roll your own specific 
    notification or other action as an action statement.

    I also found that Awesome Blueprints Matt has a blueprint to send this stuff 
    to your phone, so I referenced that here to be helpful if you are looking for that.
    If you want to send these notifications to a mobile device, i suggest you look at
    the following blueprint to use in conjunction with this blueprint. I am not 
    affiliated with that, but decided I didn''t want to re-invent the wheel as 
    mobile HA is not something I do every day. 
    [![Open your Home Assistant instance and show the blueprint import dialog with a specific blueprint pre-filled.](https://my.home-assistant.io/badges/blueprint_import.svg)](https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https%3A%2F%2Fgithub.com%2FEPMatt%2Fawesome-ha-blueprints%2Fblob%2Fmain%2Fblueprints%2Fautomation%2Fpersistent_notification_to_mobile%2Fpersistent_notification_to_mobile.yaml)
    
    ## üêò Requirements
    
    ### Persistent Notification Integration Required

    You must have this integration enabled on your system to run the automation, since 
    the these notifications are generated by this integration. This should be 
    activated in your HA Instance by default, so unless you tweaked the default 
    configuration, you''re good to go.

    ### [Persistent Notification Integration Docs ](https://www.home-assistant.io/integrations/persistent_notification/)

    üì© There is not an official version control system for Blueprints. However I have 
    found something that comes pretty close. It is not perfect, but for **MOST** 
    Blueprints, it does just fine. I encourage you to check this script out and use 
    it to easily check if I have updated this blueprint. [üîókoter84 Blueprint Update Script ](https://github.com/koter84/HomeAssistant_Blueprints_Update/)


    [Community link for this blueprint ](https://community.home-assistant.io/t/device-tracker-monitor-notifier/500688)
    '
  source_url: https://github.com/SirGoodenough/HA_Blueprints/blob/master/Automations/Device_tracker_Monitor_and_Notifier.yaml
  domain: automation
  homeassistant:
    min_version: 2023.3.0
  input:
    trackees:
      name: Devices to Track
      description: 'Select all the devices that you would like to track with this
        Blueprint. Multiples are allowed.
        '
      selector:
        entity:
          domain: device_tracker
          multiple: true
    gone_for:
      name: Time delay before reporting outage 1st time
      description: 'This variable is here to allow a time delay before the
        Blueprint starts doing anything. Sometimes you have a thing that likes
        to dissapear for a short time but usually finds it''s way home. 
        (BUT sometimes doesn''t)
        Or you are using this Blueprint to run an automatic reset action but
        need a delay to make sure that there actually is a problem.
        00:00:00.00 is the default which means as soon as the devices go
        to away, it triggers.
        '
      default:
        hours: 0
        minutes: 0
        seconds: 0
      selector:
        duration:
    alt_notify:
      name: Manual Notifications Level 1
      description: 'Enter the action yaml for any specific notification or action 
        you would like to perform on the first notification. 
        This can be anything from a custom pushbullet or text message, a message 
        to the system log, a manual event to trigger something else, or a simple 
        TTS message to your Google Speaker. It can also be all of these things 
        at once. It could even be something like a reboot command to
        right the ship. 
        
        Any action yaml statement that is valid will be executed.
        '
      default: []
      selector:
        action: {}
    gone_for_longer:
      name: Time delay before reporting outage 2nd time
      description: 'This variable is here to allow a time delay before the
        Blueprint triggers a second time.
        This means it was off longer than the first delay and whatever
        you did to recover the first time didn''t work leaving the device
        ```not home```.
        Is useful if you are using this BP to restart stuck devices.
        Default is set to an hour but in general use it should be set to
        a value greater than the first delay.
        '
      default:
        hours: 1
        minutes: 0
        seconds: 0
      selector:
        duration:
    alt_notify_2:
      name: Manual Notifications Level 2
      description: 'Enter the action yaml for any specific notification or action 
        you would like to perform on the second notification.
        This is what to do after the 2nd trigger delay.
        Any action yaml statement that is valid will be executed.
        Default is nothing so only a normal notification will happen with the
        2nd trigger if left blank.
        '
      default: []
      selector:
        action: {}
    gone_for_still_longer:
      name: Time delay before reporting outage 3rd time
      description: 'This variable is here to allow a time delay before the
        Blueprint triggers a third time.
        This means it was off longer than the first + second delay and whatever
        you did to recover the first two times didn''t work leaving the device
        ```not home```.
        Is useful if you are using this BP to restart stuck devices.
        Default is set to 4 hours but in general use it should be set to
        a value greater than the second delay.
        '
      default:
        hours: 4
        minutes: 0
        seconds: 0
      selector:
        duration:
    alt_notify_3:
      name: Manual Notifications Level 3
      description: 'Enter the action yaml for any specific notification or action 
        you would like to perform on the third notification.
        This is what to do after the 3rd trigger delay.
        Any action yaml statement that is valid will be executed.
        Default is nothing so only a normal notification will happen with the
        3nd trigger if left blank.
        '
      default: []
      selector:
        action: {}
    gone_for_still_more_longer:
      name: Time delay before reporting outage 4th time
      description: 'This variable is here to allow a time delay before the
        Blueprint triggers a fourth time.
        This means it was off longer than all the delays and whatever
        you did to recover the times didn''t work leaving the device
        ```not home```.
        Is useful if you are using this BP to restart stuck devices.
        Default is set to 6 hours but in general use it should be set to
        a value greater than the third delay.
        '
      default:
        hours: 6
        minutes: 0
        seconds: 0
      selector:
        duration:
    alt_notify_4:
      name: Manual Notifications Level 4
      description: 'Enter the action yaml for any specific notification or action 
        you would like to perform on the fourth notification.
        This is what to do after the 3rd trigger delay.
        Any action yaml statement that is valid will be executed.
        Default is nothing so only a normal notification will happen with the
        3nd trigger if left blank.
        '
      default: []
      selector:
        action: {}
    skip_p_notifcation:
      name: 'Choose to send persistent notification (or not).'
      description: 'on/true means a Persistent Notification is sent, off/false 
        means it is not. 
        If you set this to off and do not add a manual notification method, 
        this blueprint then does nothing.
        '
      default: true
      selector:
        boolean:
    notification_id:
      name: Optional Persistent Notification ID
      description: 'This is an optional parameter to be used for notifications to
        mobile devices and other things.
        This will be converted to all letters and / or numbers with no spaces,
        so keep that in mind when referencing it later.
        If you put an ID in here, the first message that is triggered will lock in 
        until you clear it. This will prevent any further notifications from this 
        blueprint until you clear the old message.
        
        If you don''t know what this is for, you probably should leave it blank.'
      default: []
      selector:
        text: {}
    notify_enable_time:
      name: Time of day to begin notifications
      description: 'Set this for the time of day you want to allow notifications to begin.
        Leave as is to always be enabled.'
      default: 00:00:00
      selector:
        time: {}
    notify_disable_time:
      name: Time of day to end notifications
      description: 'Set this for the time of day you want notificatons to end.
        Leave as is to always be enabled.'
      default: 00:00:00
      selector:
        time: {}
    weekday:
      name: Day of the week to allow notifications
      description: 'Change options if you want to include or exclude any specific day.
        All days are selected by default.'
      default:
      - mon
      - tue
      - wed
      - thu
      - fri
      - sat
      - sun
      selector:
        select:
          options:
          - label: Monday
            value: mon
          - label: Tuesday
            value: tue
          - label: Wednesday
            value: wed
          - label: Thursday
            value: thu
          - label: Friday
            value: fri
          - label: Saturday
            value: sat
          - label: Sunday
            value: sun
          custom_value: false
          multiple: true

variables:
    # Get the alt_notify_1 into a variable to test it for empty later.
  alt_notify_var: !input alt_notify
    # Get the alt_notify_2 into a variable to test it for empty later.
  alt_notify_2_var: !input alt_notify_2
    # Get the alt_notify_3 into a variable to test it for empty later.
  alt_notify_3_var: !input alt_notify_3
    # Get the alt_notify_4 into a variable to test it for empty later.
  alt_notify_4_var: !input alt_notify_4
    # Get the notification_id into a variable.
  notification_id_var: !input notification_id
    # Strip weirdness from the user supplied notification_id.
  notify_id: '{{ notification_id_var | regex_replace("[^A-Za-z0-9]", "") }}'
    # Grab the triggered entity attributes.
  attr_raw: '{{ states[trigger.to_state.entity_id] }}'
    # Strip the beginning and end garbage from those attributes.
  attr: '{{ attr_raw.split(''; '')[1].split(''>'')[0] }}'

trigger:
  - platform: state
    id: level_1
    entity_id: !input trackees
    from: "home"
    for: !input gone_for
  - platform: state
    id: level_2
    entity_id: !input trackees
    from: "home"
    for: !input gone_for_longer
  - platform: state
    id: level_3
    entity_id: !input trackees
    from: "home"
    for: !input gone_for_still_longer
  - platform: state
    id: level_4
    entity_id: !input trackees
    from: "home"
    for: !input gone_for_still_more_longer

condition:
  - alias: Only allow execution within selected Hours / Weekdays
    condition: time
    after: !input 'notify_enable_time'
    before: !input 'notify_disable_time'
    weekday: !input 'weekday'
action:
- alias: 'Persistent Notifications. Options are skip it, use a notification_id, or default to no id'
  choose:
  - conditions: '{{ skip_p_notification== false }}'
    sequence: []
  - conditions: '{{ notify_id | length > 0 }}'
    sequence: 
    - alias: Notify interested parties WITH notification_id
      service: persistent_notification.create
      data:
        title: '{{ states[trigger.to_state.entity_id].name + '' Status'' }}'
        message: '{{ states[trigger.to_state.entity_id].name + '' is '' + states[trigger.to_state.entity_id].state }}
          Full Attributes List:
          {{ ''notification_id='' + notify_id }}
          {% for item in attr.split('' '') %}
          {{ item | replace( '','', ''\n'') | replace( ''@'', ''\n'')}}
          {%- endfor %}
          '
        notification_id: '{{ notify_id }}'
  default:
    - alias: Notify interested parties WITHOUT notification_id
      service: persistent_notification.create
      data:
        title: '{{ states[trigger.to_state.entity_id].name + '' Status'' }}'
        message: '{{ states[trigger.to_state.entity_id].name + '' is '' + states[trigger.to_state.entity_id].state }}
          Full Attributes List:
          {% for item in attr.split('' '') %}
          {{ item | replace( '','', ''\n'') | replace( ''@'', ''\n'')}}
          {%- endfor %}
          '
- alias: All the custom code is fired here
  choose:
  - conditions:
    - alias: Check for Alternate Notifications Level 1
      condition: and
      conditions:
      - condition: trigger
        id: level_1
      - condition: template
        value_template:
          '{{ not alt_notify_var in (''none'', ''null'', ''unavailable'', '''') }}'
    sequence: !input 'alt_notify'
  - conditions:
    - alias: Check for Alternate Notifications Level 2
      condition: and
      conditions:
      - condition: trigger
        id: level_2
      - condition: template
        value_template:
          '{{ not alt_notify_2_var in (''none'', ''null'', ''unavailable'', '''') }}'
    sequence: !input 'alt_notify_2'
  - conditions:
    - alias: Check for Alternate Notifications Level 3  
      condition: and
      conditions:
      - condition: trigger
        id: level_3
      - condition: template
        value_template:
          '{{ not alt_notify_3_var in (''none'', ''null'', ''unavailable'', '''') }}'
    sequence: !input 'alt_notify_3'
  - conditions:
    - alias: Check for Alternate Notifications Level 4
      condition: and
      conditions:
      - condition: trigger
        id: level_4
      - condition: template
        value_template:
          '{{ not alt_notify_4_var in (''none'', ''null'', ''unavailable'', '''') }}'
    sequence: !input 'alt_notify_4'

mode: parallel
max: 15
